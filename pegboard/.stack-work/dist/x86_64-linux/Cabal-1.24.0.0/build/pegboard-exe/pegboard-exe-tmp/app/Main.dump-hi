
==================== FINAL INTERFACE ====================
2016-10-04 16:19:34.695129 UTC

interface main@main:Main 8001
  interface hash: e7d613faa5684862cce5140c2d067a24
  ABI hash: 73e355f2adcec455e1534362c1d1eb99
  export-list hash: 614ba73b009055573df6089fb1797d4e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 267082d0d2ca8f2a883a57b6af67b713
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.b
  Main.b'
  Main.concB
  Main.concB'
  Main.main
module dependencies:
package dependencies: GLURaw-2.0.0.2@GLURaw-2.0.0.2-FbcPHzTa7vLEnCQ0kkJ8B4
                      GLUT-2.7.0.10@GLUT-2.7.0.10-A3NqGto8XAVI0ysflkZZW9
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-HHHIolNI8Pm5H3OGkgSUrO
                      OpenGL-3.0.1.0@OpenGL-3.0.1.0-2SQfSEFR02AIolFfoam9tJ
                      OpenGLRaw-3.2.2.0@OpenGLRaw-3.2.2.0-KWU3ruQNCGR7AsVafRovL
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-KF4xHl5RTVIp6NQI8dI2I
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-21JkkJmr6h52cZo1o8cauA ghc-prim-0.5.0.0
                      gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB
                      gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr
                      half-0.2.2.3@half-0.2.2.3-BFHx0LiJemg6baNXrjGThF
                      integer-gmp-1.0.0.1
                      pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss d5b982018b0c758f00994fce74453c04
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:Analytics 39eb14961649799faee79358a8534710
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:CriticalPoints 3ac4b1acf8244223bf7173d25fc6c635
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:Graphics 3b21b77a536a60b930c1cdd2d1de6821
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:PegBoard e5ae7f741df6e5acec6857f64e0e15aa
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:PlayGame ea989d509c6118403d9cf21429970cf0
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:Symmetries e33bd8a3477142c6e23c8ce3a5906f5b
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
1b63d2928a88b99d0b23507e9bd762c3
  $wgo ::
    [PlayGame.BoardLog] -> (# PegBoard.Board, [PegBoard.Board] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
a4a0b24e165a13e8130c590532600f8b
  b :: PegBoard.Board
  {- Unfolding: (case PegBoard.$wmakeBoard
                        Main.b3 of ww { (#,#) ww1 ww2 ->
                 case PegBoard.$wremovePeg Main.b1 ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.Board ww4 ww5 } }) -}
91b201580e879c179b1a43cd242869b1
  b' :: [PegBoard.Board]
  {- Unfolding: (case PlayGame.$wplayLog
                        Main.b'1
                        (GHC.Types.[] @ PlayGame.BoardLog) of ww3 { (#,#) ww4 ww5 ->
                 case Main.$wgo ww5 of ww { (#,#) ww1 ww2 ->
                 GHC.List.reverse1
                   @ PegBoard.Board
                   (GHC.Types.: @ PegBoard.Board ww1 ww2)
                   (GHC.Types.[] @ PegBoard.Board) } }) -}
ddd71c4d8b5d705aa8b034f6925d78c1
  b'1 :: [PlayGame.BoardLog]
  {- Unfolding: (GHC.Types.:
                   @ PlayGame.BoardLog
                   Main.b'2
                   (GHC.Types.[] @ PlayGame.BoardLog)) -}
333200f480bc177a5bcc6bb0adc08e9c
  b'2 :: PlayGame.BoardLog
  {- Strictness: m,
     Unfolding: (PlayGame.BoardLog
                   Main.b
                   (GHC.Types.[] @ PegBoard.Board)) -}
409b740f7b8d5c06f741ffd1655fd8d4
  b1 :: PegBoard.Coord
  {- HasNoCafRefs, Unfolding: (PegBoard.Coord Main.b2 Main.b2) -}
47bad64b76482af8b80d6600a4029f6e
  b2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
5ccc98defcf0e6c43b885fdfd9dec78c
  b3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
c4bb72fabfdae00e6a251a4c2460585d
  concB :: [PegBoard.Board]
  {- Unfolding: (case Main.b of ww3 { PegBoard.Board ww4 ww5 ->
                 case CriticalPoints.$wconcentricTriangles'
                        ww4
                        ww5
                        (GHC.Types.[] @ PegBoard.Board) of ww6 { (#,#) ww7 ww8 ->
                 ww8 } }) -}
d7e9104d63cf7a080ad9c886d343df25
  concB' :: [PegBoard.Board]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ PegBoard.Board
                   Main.concB'2
                   Main.concB'1) -}
f907804d569ff1f3fd23518e000e84e4
  concB'1 :: [PegBoard.Board]
  {- Unfolding: (Helpers.Lists.compMapR
                   @ PegBoard.Board
                   @ PegBoard.Board
                   CriticalPoints.concentricTrianglesExclusive1
                   Main.concB) -}
792013d02335c3c341633d2e9f92bb8b
  concB'2 :: PegBoard.Board
  {- Unfolding: (case Main.concB of wild {
                   [] -> GHC.List.badHead @ PegBoard.Board : x ds1 -> x }) -}
25f4bc06f4f3d34e7b84cd7604c2a325
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
d0af4413cf3c9243841dcaf825a5ff55
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main20
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main19
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main18
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main17
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main16
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main15
                        GHC.Types.True
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main14
                        GHC.Types.True
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main13
                        GHC.Types.True
                        ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main12
                        GHC.Types.True
                        ipv14 of ds9 { (#,#) ipv16 ipv17 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main9
                        GHC.Types.True
                        ipv16 of ds10 { (#,#) ipv18 ipv19 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main8
                        GHC.Types.True
                        ipv18 of ds11 { (#,#) ipv20 ipv21 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main5
                        GHC.Types.True
                        ipv20 of ds12 { (#,#) ipv22 ipv23 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        ipv22 of ds13 { (#,#) ipv24 ipv25 ->
                 Main.main3 Main.main2 ipv24 } } } } } } } } } } } } }) -}
6379dc2fb1ccd1cbf1fef1fdc77f30e0
  main10 :: PegBoard.Board
  {- Unfolding: (case Symmetries.$wclockRotate
                        Main.main11 of ww { (#,#) ww1 ww2 ->
                 PegBoard.Board ww1 ww2 }) -}
b49cc0c2cc2b745aa7f6a86fcccbc58c
  main11 :: PegBoard.Board
  {- Unfolding: (case Symmetries.$wclockRotate
                        Main.b of ww { (#,#) ww1 ww2 ->
                 case Symmetries.$wzedFlip ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.Board ww4 ww5 } }) -}
05b65d772714d3c841681edd386b4fdf
  main12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Pos Flip"#) -}
a09969cde94de26cd20aa48624c91a7e
  main13 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 case Symmetries.$wzedFlip ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.$wshowBoard ww4 ww5 } }) -}
3459ba9c5ab0b2f8518e5136676f1ba8
  main14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Zed Flip"#) -}
955de7c41e7755fac5e13a75b270d789
  main15 :: GHC.Base.String
  {- Unfolding: (case Symmetries.$wclockRotate
                        Main.main7 of ww { (#,#) ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
cb246240f58003de5de35b0fb3687886
  main16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Counter-clockwise Rotation"#) -}
d9e13b32a2d177dfaeb24e4d1e9f076e
  main17 :: GHC.Base.String
  {- Unfolding: (case Symmetries.$wclockRotate
                        Main.b of ww { (#,#) ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
2d63afb9d78a04d68e62cc289496f989
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Clockwise Rotation"#) -}
cfb28437bb9f9c74dc296f22dbb6e547
  main19 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
cfb917f2d18ee372a4b3e0996cbeb8a3
  main2 :: [Symmetries.Symmetries]
  {- Unfolding: (case Symmetries.$wfindSymmetries
                        Main.b of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ Symmetries.Symmetries ww1 ww2 }) -}
99e92c78de5a4d99616e3a04ca635dc8
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Base Board"#) -}
63e8e07463c78a8285e3b36a3a480112
  main21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
4a20d15feb3d30651faf597e17c2c3cf
  main3 ::
    [Symmetries.Symmetries]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
add7f8ba56232e7ab3b7b213af20dd5e
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Symmetries:"#) -}
ffb9dade45baed7c4a3cee88647e27eb
  main5 :: GHC.Base.String
  {- Unfolding: (case Symmetries.$wclockRotate
                        Main.main6 of ww { (#,#) ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
239465a5f39e7a0e9c7833d85901f517
  main6 :: PegBoard.Board
  {- Unfolding: (case Symmetries.$wclockRotate
                        Main.main7 of ww { (#,#) ww1 ww2 ->
                 case Symmetries.$wzedFlip ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.Board ww4 ww5 } }) -}
f1f05901b4e8e860e480dec8a29ae2d0
  main7 :: PegBoard.Board
  {- Unfolding: (case Symmetries.$wclockRotate
                        Main.b of ww { (#,#) ww1 ww2 ->
                 PegBoard.Board ww1 ww2 }) -}
38d33b79e83da7e1837edfbdc98b6e26
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Neg Flip"#) -}
7d62be93f71f79c4eec28bb0788f9e81
  main9 :: GHC.Base.String
  {- Unfolding: (case Symmetries.$wclockRotate
                        Main.main10 of ww { (#,#) ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

