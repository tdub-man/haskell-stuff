
==================== FINAL INTERFACE ====================
2016-10-03 22:49:05.335189 UTC

interface main@main:Main 8001
  interface hash: 5ec78a5f7805235ad582c6513b19a2fe
  ABI hash: 3689fecca286cbece6d98383599b56e5
  export-list hash: 614ba73b009055573df6089fb1797d4e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 267082d0d2ca8f2a883a57b6af67b713
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.b
  Main.b'
  Main.concB
  Main.concB'
  Main.main
module dependencies:
package dependencies: GLURaw-2.0.0.2@GLURaw-2.0.0.2-FbcPHzTa7vLEnCQ0kkJ8B4
                      GLUT-2.7.0.10@GLUT-2.7.0.10-A3NqGto8XAVI0ysflkZZW9
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-HHHIolNI8Pm5H3OGkgSUrO
                      OpenGL-3.0.1.0@OpenGL-3.0.1.0-2SQfSEFR02AIolFfoam9tJ
                      OpenGLRaw-3.2.2.0@OpenGLRaw-3.2.2.0-KWU3ruQNCGR7AsVafRovL
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-KF4xHl5RTVIp6NQI8dI2I
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-21JkkJmr6h52cZo1o8cauA ghc-prim-0.5.0.0
                      gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB
                      gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr
                      half-0.2.2.3@half-0.2.2.3-BFHx0LiJemg6baNXrjGThF
                      integer-gmp-1.0.0.1
                      pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO eb1d40aa793a4047069a5023f2ebcfe3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss d5b982018b0c758f00994fce74453c04
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:PegBoard 2feff203ebfeacb2de886c6d7cd8d789
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:PegBoardAnalytics 082d69b928f7761e0ad67f427e506dc8
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:PegBoardCriticalPoints 22473441ab6f350255982d1a1e8c8acb
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:PegBoardGraphics 516903083d0248f7157640d365cea455
import  -/  pegboard-0.1.0.0@pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:PegBoardSymmetries e338927a560880dbc3ff65e098b06bf4
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
5d00de977dbd8ece8c388b553b56a23c
  $wgo ::
    [PegBoard.BoardLog] -> (# PegBoard.Board, [PegBoard.Board] #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
3dcfabe7c5aa3ef40abfd6b8743ad69c
  b :: PegBoard.Board
  {- Unfolding: (case PegBoard.$wmakeBoard
                        Main.b3 of ww { (#,#) ww1 ww2 ->
                 case PegBoard.$wremovePeg Main.b1 ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.Board ww4 ww5 } }) -}
bd3e460be151f9fa149f469a5ccf1992
  b' :: [PegBoard.Board]
  {- Unfolding: (case PegBoard.$wplayLog
                        Main.b'1
                        (GHC.Types.[] @ PegBoard.BoardLog) of ww3 { (#,#) ww4 ww5 ->
                 case Main.$wgo ww5 of ww { (#,#) ww1 ww2 ->
                 GHC.List.reverse1
                   @ PegBoard.Board
                   (GHC.Types.: @ PegBoard.Board ww1 ww2)
                   (GHC.Types.[] @ PegBoard.Board) } }) -}
78f482ccf2f4910b22fa737d006da3ec
  b'1 :: [PegBoard.BoardLog]
  {- Unfolding: (GHC.Types.:
                   @ PegBoard.BoardLog
                   Main.b'2
                   (GHC.Types.[] @ PegBoard.BoardLog)) -}
e5b7ca7e4a44b91dd774a1a0f8a52e69
  b'2 :: PegBoard.BoardLog
  {- Strictness: m,
     Unfolding: (PegBoard.BoardLog
                   Main.b
                   (GHC.Types.[] @ PegBoard.Board)) -}
38ef4bce002d1ecec30c65dda4cbf5c4
  b1 :: PegBoard.Coord
  {- HasNoCafRefs, Unfolding: (PegBoard.Coord Main.b2 Main.b2) -}
47bad64b76482af8b80d6600a4029f6e
  b2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
5ccc98defcf0e6c43b885fdfd9dec78c
  b3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
02ea51aba0924daae903d56f96c3f265
  concB :: [PegBoard.Board]
  {- Unfolding: (case Main.b of ww3 { PegBoard.Board ww4 ww5 ->
                 case PegBoardCriticalPoints.$wconcentricTriangles'
                        ww4
                        ww5
                        (GHC.Types.[] @ PegBoard.Board) of ww6 { (#,#) ww7 ww8 ->
                 ww8 } }) -}
991f54b1cd6341cfaa22531def6d8278
  concB' :: [PegBoard.Board]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ PegBoard.Board
                   Main.concB'2
                   Main.concB'1) -}
354f9b50292f19bcbab4c1258df778a9
  concB'1 :: [PegBoard.Board]
  {- Unfolding: (Helpers.Lists.compMapR
                   @ PegBoard.Board
                   @ PegBoard.Board
                   PegBoardCriticalPoints.concentricTrianglesExclusive1
                   Main.concB) -}
75188d085cbdff0e3f75db23fb8543ac
  concB'2 :: PegBoard.Board
  {- Unfolding: (case Main.concB of wild {
                   [] -> GHC.List.badHead @ PegBoard.Board : x ds1 -> x }) -}
ec62a149ce2fa61d1a009e5f58b2ac4c
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
4455ffe5ac1bc62a364256e110828225
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main20
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main19
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main18
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main17
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main16
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main15
                        GHC.Types.True
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main14
                        GHC.Types.True
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main13
                        GHC.Types.True
                        ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main12
                        GHC.Types.True
                        ipv14 of ds9 { (#,#) ipv16 ipv17 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main9
                        GHC.Types.True
                        ipv16 of ds10 { (#,#) ipv18 ipv19 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main8
                        GHC.Types.True
                        ipv18 of ds11 { (#,#) ipv20 ipv21 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main5
                        GHC.Types.True
                        ipv20 of ds12 { (#,#) ipv22 ipv23 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        ipv22 of ds13 { (#,#) ipv24 ipv25 ->
                 Main.main3 Main.main2 ipv24 } } } } } } } } } } } } }) -}
4f1ea27ef240e4dc3e61e06668110eeb
  main10 :: PegBoard.Board
  {- Unfolding: (case PegBoardSymmetries.$wclockRotate
                        Main.main11 of ww { (#,#) ww1 ww2 ->
                 PegBoard.Board ww1 ww2 }) -}
89ecf4adf77b731213038ef26afa9765
  main11 :: PegBoard.Board
  {- Unfolding: (case PegBoardSymmetries.$wclockRotate
                        Main.b of ww { (#,#) ww1 ww2 ->
                 case PegBoardSymmetries.$wzedFlip ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.Board ww4 ww5 } }) -}
05b65d772714d3c841681edd386b4fdf
  main12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Pos Flip"#) -}
2d8e31574c64027b142298fff4b6a622
  main13 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 case PegBoardSymmetries.$wzedFlip ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.$wshowBoard ww4 ww5 } }) -}
3459ba9c5ab0b2f8518e5136676f1ba8
  main14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Zed Flip"#) -}
539305633efc2046cb5e0d53d1ebe9ac
  main15 :: GHC.Base.String
  {- Unfolding: (case PegBoardSymmetries.$wclockRotate
                        Main.main7 of ww { (#,#) ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
cb246240f58003de5de35b0fb3687886
  main16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Counter-clockwise Rotation"#) -}
877e18ba4564d2877ad20aca5f60e416
  main17 :: GHC.Base.String
  {- Unfolding: (case PegBoardSymmetries.$wclockRotate
                        Main.b of ww { (#,#) ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
2d63afb9d78a04d68e62cc289496f989
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Clockwise Rotation"#) -}
5c36b7ad2315615ab93edc8c28c8d30b
  main19 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
556ead0eafeab18ec96532909b9a0f7f
  main2 :: [PegBoardSymmetries.Symmetries]
  {- Unfolding: (case PegBoardSymmetries.$wfindSymmetries
                        Main.b of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ PegBoardSymmetries.Symmetries ww1 ww2 }) -}
99e92c78de5a4d99616e3a04ca635dc8
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Base Board"#) -}
0b0c1e94fa9195938fb0980f55e98184
  main21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
be63b4db5c5b7d508dd489d738b07a7e
  main3 ::
    [PegBoardSymmetries.Symmetries]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
add7f8ba56232e7ab3b7b213af20dd5e
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Symmetries:"#) -}
93bebdd8d0eb30ab0279907c4ddcdee8
  main5 :: GHC.Base.String
  {- Unfolding: (case PegBoardSymmetries.$wclockRotate
                        Main.main6 of ww { (#,#) ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
d538a87302615d4c7eee1a54fd3d2aaf
  main6 :: PegBoard.Board
  {- Unfolding: (case PegBoardSymmetries.$wclockRotate
                        Main.main7 of ww { (#,#) ww1 ww2 ->
                 case PegBoardSymmetries.$wzedFlip ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.Board ww4 ww5 } }) -}
4101cc1dac0151298fdda62298f30284
  main7 :: PegBoard.Board
  {- Unfolding: (case PegBoardSymmetries.$wclockRotate
                        Main.b of ww { (#,#) ww1 ww2 ->
                 PegBoard.Board ww1 ww2 }) -}
38d33b79e83da7e1837edfbdc98b6e26
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Neg Flip"#) -}
daa067b83b0a564c271599eaa23395a7
  main9 :: GHC.Base.String
  {- Unfolding: (case PegBoardSymmetries.$wclockRotate
                        Main.main10 of ww { (#,#) ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

