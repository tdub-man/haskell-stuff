
==================== FINAL INTERFACE ====================
2016-10-28 22:22:58.045916 UTC

interface pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:Graphics 8001
  interface hash: 0eb49c5ba93a60abc5d1f3ad958230d1
  ABI hash: e547fb6ef30841409dde2abfedf11d16
  export-list hash: 3c1308225ea2e14f0de2a6b7d3a6490d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Graphics.displayBoard
  Graphics.displayBoards
  Graphics.displayBoardsSquare
  Graphics.displayInteractive
  Graphics.offset
  Graphics.renderBoard
  Graphics.renderBoards
  Graphics.renderBoardsSquare
module dependencies: CriticalPoints Helpers.Lists Helpers.Math
                     PegBoard
package dependencies: GLURaw-2.0.0.2@GLURaw-2.0.0.2-FbcPHzTa7vLEnCQ0kkJ8B4
                      GLUT-2.7.0.10@GLUT-2.7.0.10-A3NqGto8XAVI0ysflkZZW9
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-HHHIolNI8Pm5H3OGkgSUrO
                      OpenGL-3.0.1.0@OpenGL-3.0.1.0-2SQfSEFR02AIolFfoam9tJ
                      OpenGLRaw-3.2.2.0@OpenGLRaw-3.2.2.0-KWU3ruQNCGR7AsVafRovL
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-KF4xHl5RTVIp6NQI8dI2I
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-21JkkJmr6h52cZo1o8cauA ghc-prim-0.5.0.0
                      gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB
                      gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr
                      half-0.2.2.3@half-0.2.2.3-BFHx0LiJemg6baNXrjGThF
                      integer-gmp-1.0.0.1 stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Tuple acb0ed10307ed88df6c81b8589f4de16
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Float 469226b1bc53433e95d0167dec5d0312
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss d5b982018b0c758f00994fce74453c04
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Color b525c333674d23cc8320332d7db6f0cc
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Display 23041d1e33431329e29c0f20d2656204
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Picture e95e53d5f841f673cdd330becc7218b6
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Interface.Pure.Display 4a533cefe8cfd70824e77b2888fc8dc2
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Interface.Pure.Game 2dd340a64cf43818f7fb9d5ecccf65d2
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Backend.Types 6dedaa7d5ac2b54ee5c9eafd16b95468
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Event 72f0eabd47b5e04e08135dc87ef0ee7a
import  -/  gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture 1b8e2c645c53408a68ac59ac66e45f2b
import  -/  CriticalPoints af57f81cf1244d8ee38733403d6a3642
  exports: 062caa36d150055fae0d4d8d1aee2142
  toBoolRows 91e7238be23cecdff18f8e5129e176ef
import  -/  Helpers.Lists 9c52ca015466111e8d572aeb56cfef86
  exports: 975c27250cc63b29bcdfa4d36e613251
  subDivide 393576c801ae6ff29ff6229f90fd19c8
import  -/  PegBoard f83d3917c805320b9d1eddcc14783c79
  exports: 019cb6a33f1bb6c7b9bb5da6116f70e8
  Board c47801c17d6fbde18b84e473ce510507
02db14ea86b7a65c93efbb2c1750683c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Graphics.$trModule2
                   Graphics.$trModule1) -}
f215b5d543a20d1c5d18ef80d6ca5792
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Graphics"#) -}
6451fb8106aa9a16c571128146772e22
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2"#) -}
2de3f4c25940c0f1567706904e9307dc
  $wrenderBoard ::
    PegBoard.Board
    -> (# [Graphics.Gloss.Internals.Data.Picture.Picture] #)
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>, Inline: [0],
     Unfolding: (\ (w :: PegBoard.Board) ->
                 (# case w of ww { PegBoard.Board ww1 ww2 ->
                    Graphics.renderBoard_$soffsetF
                      Graphics.renderBoard10
                      Graphics.renderBoard8
                      (GHC.List.reverse1
                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                         (GHC.Base.map
                            @ [(PegBoard.Coord, GHC.Types.Bool)]
                            @ Graphics.Gloss.Internals.Data.Picture.Picture
                            Graphics.renderBoard1
                            (Data.OldList.groupBy
                               @ (PegBoard.Coord, GHC.Types.Bool)
                               CriticalPoints.boolRows2
                               (Data.OldList.sortBy
                                  @ (PegBoard.Coord, GHC.Types.Bool)
                                  CriticalPoints.boolRows1
                                  (CriticalPoints.$wtoBoolRow ww1 ww2))))
                         (GHC.Types.[]
                            @ Graphics.Gloss.Internals.Data.Picture.Picture)) } #)) -}
44397789ec6f9be3e5dc6bcbf95c5465
  type PBZipper = ([PegBoard.Board], [PegBoard.Board])
39ae3a7e58dd033e1d67279b14b616ef
  displayBoard :: PegBoard.Board -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.displayBoard1
                  `cast`
                (<PegBoard.Board>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
e162b93060a6537298b7e99690268365
  displayBoard1 ::
    PegBoard.Board
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (b :: PegBoard.Board)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Graphics.Gloss.Internals.Interface.Display.displayWithBackend1
                   @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                   Graphics.displayBoard2
                   Graphics.Gloss.Data.Color.black
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, Graphics.renderBoard b #))
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                   Graphics.Gloss.Interface.Pure.Display.display2
                     `cast`
                   (<Graphics.Gloss.Data.Controller.Controller>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   eta) -}
b9cb9c4faf28cc8391d05b72041a9f56
  displayBoard2 :: Graphics.Gloss.Data.Display.Display
  {- Strictness: m1,
     Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   Graphics.displayBoard7
                   Graphics.displayBoard5
                   Graphics.displayBoard3) -}
8e959b2b6eb830e79e54cc4498ef5aee
  displayBoard3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Graphics.displayBoard4, Graphics.displayBoard4)) -}
4aaa83c162ea96a8f0b58f73fb00ca9e
  displayBoard4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
1b4d9b550f4a76def50fa7e4ba068f23
  displayBoard5 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Graphics.displayBoard6, Graphics.displayBoard6)) -}
e2b58046e076eab67c07f476e99aa11b
  displayBoard6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 600#) -}
3c0ae0105ba39f69833cf50d3e5ab958
  displayBoard7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PegBoard"#) -}
ce9bf97bf10e0bcee3ab35d840f4ab8e
  displayBoards :: [PegBoard.Board] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.displayBoards1
                  `cast`
                (<[PegBoard.Board]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9cd2fb736decbf56366742f5d1f009de
  displayBoards1 ::
    [PegBoard.Board]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (bs :: [PegBoard.Board])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Graphics.Gloss.Internals.Interface.Display.displayWithBackend1
                   @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                   Graphics.displayBoard2
                   Graphics.Gloss.Data.Color.black
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, Graphics.renderBoards bs #))
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                   Graphics.Gloss.Interface.Pure.Display.display2
                     `cast`
                   (<Graphics.Gloss.Data.Controller.Controller>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   eta) -}
881e8c3c72460abd17ee0769e46582a2
  displayBoardsSquare :: [PegBoard.Board] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.displayBoardsSquare1
                  `cast`
                (<[PegBoard.Board]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
7e640cc905a2bf5ddf0df7d7ad0289a5
  displayBoardsSquare1 ::
    [PegBoard.Board]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (bs :: [PegBoard.Board])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Graphics.Gloss.Internals.Interface.Display.displayWithBackend1
                   @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                   Graphics.displayBoard2
                   Graphics.Gloss.Data.Color.black
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, Graphics.renderBoardsSquare bs #))
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                   Graphics.Gloss.Interface.Pure.Display.display2
                     `cast`
                   (<Graphics.Gloss.Data.Controller.Controller>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   eta) -}
33787879993c6f21893023a60db24b7f
  displayInteractive :: [PegBoard.Board] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.displayInteractive1
                  `cast`
                (<[PegBoard.Board]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
f8aa144dcb071db0e18a102886469ae5
  displayInteractive1 ::
    [PegBoard.Board]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (bs :: [PegBoard.Board])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.Gloss.Internals.Interface.Game.playWithBackendIO1
                        @ ([PegBoard.Board], [PegBoard.Board])
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                        Graphics.displayBoard2
                        Graphics.Gloss.Data.Color.black
                        Graphics.displayBoard4
                        (bs, GHC.Types.[] @ PegBoard.Board)
                        Graphics.displayInteractive4
                          `cast`
                        (<([PegBoard.Board], [PegBoard.Board])>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Graphics.displayInteractive3
                          `cast`
                        (<Graphics.Gloss.Internals.Interface.Event.Event>_R
                         ->_R <([PegBoard.Board], [PegBoard.Board])>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <([PegBoard.Board], [PegBoard.Board])>_R))
                        Graphics.displayInteractive2
                          `cast`
                        (<GHC.Types.Float>_R
                         ->_R <([PegBoard.Board], [PegBoard.Board])>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <([PegBoard.Board], [PegBoard.Board])>_R))
                        GHC.Types.True
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
e1d9cc93779d9dc74ff98b161d8a136b
  displayInteractive2 ::
    GHC.Types.Float
    -> ([PegBoard.Board], [PegBoard.Board])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([PegBoard.Board], [PegBoard.Board]) #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (time :: GHC.Types.Float)
                   (world1 :: ([PegBoard.Board], [PegBoard.Board]))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, world1 #)) -}
b150a4a3a424e1ce159928f5a4dd390a
  displayInteractive3 ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> ([PegBoard.Board], [PegBoard.Board])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([PegBoard.Board], [PegBoard.Board]) #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (event :: Graphics.Gloss.Internals.Interface.Event.Event)
                   (world1 :: ([PegBoard.Board], [PegBoard.Board]))[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case event of wild {
                      DEFAULT -> world1
                      Graphics.Gloss.Internals.Interface.Event.EventKey ds ds1 ds2 ds3
                      -> case ds of wild1 {
                           DEFAULT -> world1
                           Graphics.Gloss.Internals.Interface.Backend.Types.SpecialKey ds4
                           -> case ds4 of wild2 {
                                DEFAULT -> world1
                                Graphics.Gloss.Internals.Interface.Backend.Types.KeyLeft
                                -> case ds1 of wild3 {
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                     -> case world1 of wild4 { (,) as ds5 ->
                                        case ds5 of wild5 {
                                          [] -> (as, GHC.Types.[] @ PegBoard.Board)
                                          : x bs -> (GHC.Types.: @ PegBoard.Board x as, bs) } }
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Up -> world1 }
                                Graphics.Gloss.Internals.Interface.Backend.Types.KeyRight
                                -> case ds1 of wild3 {
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                     -> case world1 of wild4 { (,) ds5 bs ->
                                        case ds5 of wild5 {
                                          [] -> (GHC.Types.[] @ PegBoard.Board, bs)
                                          : x ds6
                                          -> case ds6 of wild6 {
                                               []
                                               -> (GHC.Types.:
                                                     @ PegBoard.Board
                                                     x
                                                     (GHC.Types.[] @ PegBoard.Board),
                                                   bs)
                                               : ipv ipv1
                                               -> (wild6, GHC.Types.: @ PegBoard.Board x bs) } } }
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Up
                                     -> world1 } } } } #)) -}
3cdb290c235c081d73d2dfc34a0efa56
  displayInteractive4 ::
    ([PegBoard.Board], [PegBoard.Board])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Gloss.Internals.Data.Picture.Picture #)
  {- Arity: 2,
     Unfolding: (\ (x :: ([PegBoard.Board], [PegBoard.Board]))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case x of wild { (,) ds ds1 ->
                    case ds of wild1 {
                      []
                      -> case ds1 of wild2 {
                           [] -> Graphics.Gloss.Internals.Data.Picture.Blank
                           : ipv ipv1 -> Graphics.displayInteractive5 }
                      : a ds2 -> Graphics.renderBoard a } } #)) -}
eb66f5aa75dcc1640c6abd1e924d1276
  displayInteractive5 ::
    Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: x -}
fb1733ba8a7693fe6d9f7d70ecaeca8c
  offset ::
    GHC.Types.Float
    -> GHC.Types.Float
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 3, Strictness: <L,U(U)><L,U(U)><S,1*U>,
     Unfolding: (\ (x :: GHC.Types.Float)
                   (y :: GHC.Types.Float)
                   (ps :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 Graphics.renderBoard_$soffsetF
                   (\ (eta :: GHC.Integer.Type.Integer) ->
                    case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                    case x of wild1 { GHC.Types.F# y1 ->
                    GHC.Types.F#
                      (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) y1) } })
                   (\ (eta :: GHC.Integer.Type.Integer) ->
                    case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                    case y of wild1 { GHC.Types.F# y1 ->
                    GHC.Types.F#
                      (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) y1) } })
                   ps) -}
9530f5fa1200e64913dafbfb931bd7f8
  renderBoard ::
    PegBoard.Board -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <L,1*U(1*U,1*U)>m14, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: PegBoard.Board) ->
                 case Graphics.$wrenderBoard w of ww { Unit# ww1 ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures ww1 }) -}
cd0d52a471c0368217f97813c29accc8
  renderBoard1 ::
    [(PegBoard.Coord, GHC.Types.Bool)]
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <L,1*U>m14, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(PegBoard.Coord, GHC.Types.Bool)]) ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures
                   (Graphics.renderBoard_$soffsetF
                      Graphics.renderBoard8
                      Graphics.renderBoard7
                      (GHC.Base.map
                         @ (PegBoard.Coord, GHC.Types.Bool)
                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                         Graphics.renderBoard2
                         w))) -}
b2913d0efeabe9e48af0c7ca58ee061a
  renderBoard10 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 8.0#) }) -}
fe76180d42d51f6a893273f556b145c7
  renderBoard2 ::
    (PegBoard.Coord, GHC.Types.Bool)
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: (PegBoard.Coord, GHC.Types.Bool)) ->
                 case x of wild { (,) ds1 y ->
                 case y of wild1 {
                   GHC.Types.False -> Graphics.renderBoard6
                   GHC.Types.True -> Graphics.renderBoard3 } }) -}
ccc81884bad9b2796c9c1de04a4409d5
  renderBoard3 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.green
                   Graphics.renderBoard4) -}
559a54e5d6678e383813ab6db8b2b474
  renderBoard4 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.ThickCircle
                   Graphics.renderBoard5
                   Graphics.renderBoard_r) -}
962f738e5a00ed62f575c5ffef6d4e7c
  renderBoard5 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 4.0#) -}
3ba248ebb96c991c7286fdabe33f1f66
  renderBoard6 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.red
                   Graphics.renderBoard4) -}
8f39e5ec7d6db25c4ca56c6df15a5ad6
  renderBoard7 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 0.0#) }) -}
89d315d085074cb069a0586d1ec0be84
  renderBoard8 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 16.0#) }) -}
5c81a3078cfddfae007575d731981adf
  renderBoard9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
2bd62eac53b748f93812c562a8babe62
  renderBoard_$soffsetF ::
    (GHC.Integer.Type.Integer -> GHC.Types.Float)
    -> (GHC.Integer.Type.Integer -> GHC.Types.Float)
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 3, Strictness: <L,C(U)><L,C(U)><S,1*U>,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer -> GHC.Types.Float)
                   (eta1 :: GHC.Integer.Type.Integer -> GHC.Types.Float)
                   (eta2 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 Graphics.renderBoard_go
                   eta2
                   (letrec {
                      go :: GHC.Integer.Type.Integer
                            -> [GHC.Types.Float] -> [(GHC.Types.Float, GHC.Types.Float)]
                        {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                      = \ (x :: GHC.Integer.Type.Integer) (eta3 :: [GHC.Types.Float]) ->
                        case x of x1 { DEFAULT ->
                        case eta3 of wild {
                          [] -> GHC.Types.[] @ (GHC.Types.Float, GHC.Types.Float)
                          : y ys
                          -> GHC.Types.:
                               @ (GHC.Types.Float, GHC.Types.Float)
                               (eta x1, y)
                               (go (GHC.Integer.Type.plusInteger x1 Graphics.renderBoard9) ys) } }
                    } in
                    letrec {
                      go1 :: GHC.Integer.Type.Integer -> [GHC.Types.Float]
                        {- Arity: 1, Strictness: <S,1*U> -}
                      = \ (x :: GHC.Integer.Type.Integer) ->
                        case x of x1 { DEFAULT ->
                        GHC.Types.:
                          @ GHC.Types.Float
                          (eta1 x1)
                          (go1 (GHC.Integer.Type.plusInteger x1 Graphics.renderBoard9)) }
                    } in
                    go Graphics.renderBoard9 (go1 Graphics.renderBoard9))) -}
72ea5d012d88611fd6e0e33e8739cd6b
  renderBoard_go ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [(GHC.Types.Float, GHC.Types.Float)]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
9b204a27d6c9fb4d540f96514c1f2e2a
  renderBoard_r :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 8.0#) -}
01de1b5484eedaacaf5e3eeabd25bdca
  renderBoards ::
    [PegBoard.Board] -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [PegBoard.Board]) ->
                 case ds of wild {
                   [] -> Graphics.Gloss.Internals.Data.Picture.Blank
                   : ipv ipv1
                   -> Graphics.Gloss.Internals.Data.Picture.Pictures
                        (let {
                           lvl :: GHC.Types.Float
                           = case GHC.List.$wlenAcc
                                    @ [(PegBoard.Coord, GHC.Types.Bool)]
                                    (Data.OldList.groupBy
                                       @ (PegBoard.Coord, GHC.Types.Bool)
                                       CriticalPoints.boolRows2
                                       (Data.OldList.sortBy
                                          @ (PegBoard.Coord, GHC.Types.Bool)
                                          CriticalPoints.boolRows1
                                          (CriticalPoints.toBoolRow ipv)))
                                    0# of ww2 { DEFAULT ->
                             GHC.Types.F# (GHC.Prim.plusFloat# (GHC.Prim.int2Float# ww2) 1.0#) }
                         } in
                         Graphics.renderBoard_$soffsetF
                           Graphics.renderBoards2
                           (\ (n :: GHC.Integer.Type.Integer) ->
                            case GHC.Integer.Type.doubleFromInteger
                                   (GHC.Integer.Type.timesInteger
                                      Graphics.renderBoards1
                                      n) of wild1 { DEFAULT ->
                            case lvl of wild2 { GHC.Types.F# y ->
                            GHC.Types.F#
                              (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild1) y) } })
                           (GHC.List.reverse1
                              @ Graphics.Gloss.Internals.Data.Picture.Picture
                              (GHC.Base.map
                                 @ PegBoard.Board
                                 @ Graphics.Gloss.Internals.Data.Picture.Picture
                                 Graphics.renderBoard
                                 wild)
                              (GHC.Types.[]
                                 @ Graphics.Gloss.Internals.Data.Picture.Picture))) }) -}
c58515f3718f83092b9a6c82e3506b37
  renderBoards1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (16) -}
619f23c3349a8b54a721a3799ce565a3
  renderBoards2 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Integer.Type.Integer) -> Graphics.renderBoards3) -}
49b3317b69772a89a1f9e08f76e39b52
  renderBoards3 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
b5c5436fa2b73df9753a6a3f8fd7d568
  renderBoardsSquare ::
    [PegBoard.Board] -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [PegBoard.Board]) ->
                 case ds of wild {
                   [] -> Graphics.Gloss.Internals.Data.Picture.Blank
                   : ipv ipv1
                   -> Graphics.Gloss.Internals.Data.Picture.Pictures
                        (case GHC.List.$wlenAcc
                                @ PegBoard.Board
                                wild
                                0# of ww2 { DEFAULT ->
                         let {
                           x :: GHC.Prim.Double#
                           = GHC.Prim.sqrtDouble# (GHC.Prim.int2Double# ww2)
                         } in
                         let {
                           n :: GHC.Prim.Int# = GHC.Prim.double2Int# x
                         } in
                         let {
                           lvl :: GHC.Types.Float
                           = case GHC.List.$wlenAcc
                                    @ [(PegBoard.Coord, GHC.Types.Bool)]
                                    (Data.OldList.groupBy
                                       @ (PegBoard.Coord, GHC.Types.Bool)
                                       CriticalPoints.boolRows2
                                       (Data.OldList.sortBy
                                          @ (PegBoard.Coord, GHC.Types.Bool)
                                          CriticalPoints.boolRows1
                                          (CriticalPoints.toBoolRow ipv)))
                                    0# of ww1 { DEFAULT ->
                             GHC.Types.F# (GHC.Prim.plusFloat# (GHC.Prim.int2Float# ww1) 1.0#) }
                         } in
                         let {
                           g :: GHC.Integer.Type.Integer -> GHC.Types.Float
                             {- Arity: 1, Strictness: <S,1*U>m,
                                Unfolding: InlineRule (1, True, False)
                                           (\ (n1 :: GHC.Integer.Type.Integer) ->
                                            case GHC.Integer.Type.doubleFromInteger
                                                   n1 of wild1 { DEFAULT ->
                                            case lvl of wild2 { GHC.Types.F# y ->
                                            GHC.Types.F#
                                              (GHC.Prim.timesFloat#
                                                 (GHC.Prim.timesFloat#
                                                    16.0#
                                                    (GHC.Prim.double2Float# wild1))
                                                 y) } }) -}
                           = \ (n1 :: GHC.Integer.Type.Integer) ->
                             case GHC.Integer.Type.doubleFromInteger n1 of wild1 { DEFAULT ->
                             case lvl of wild2 { GHC.Types.F# y ->
                             GHC.Types.F#
                               (GHC.Prim.timesFloat#
                                  (GHC.Prim.timesFloat# 16.0# (GHC.Prim.double2Float# wild1))
                                  y) } }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<## (GHC.Prim.int2Double# n) x) of wild1 {
                           GHC.Types.False
                           -> Graphics.renderBoard_$soffsetF
                                Graphics.renderBoards2
                                g
                                (GHC.List.reverse1
                                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                                   (GHC.Base.map
                                      @ [Graphics.Gloss.Internals.Data.Picture.Picture]
                                      @ Graphics.Gloss.Internals.Data.Picture.Picture
                                      (\ (x1 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                                       Graphics.Gloss.Internals.Data.Picture.Pictures
                                         (Graphics.renderBoard_$soffsetF
                                            g
                                            Graphics.renderBoards2
                                            x1))
                                      (Helpers.Lists.$wsubDivide
                                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                                         n
                                         (GHC.Base.map
                                            @ PegBoard.Board
                                            @ Graphics.Gloss.Internals.Data.Picture.Picture
                                            Graphics.renderBoard
                                            wild)))
                                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture))
                           GHC.Types.True
                           -> Graphics.renderBoard_$soffsetF
                                Graphics.renderBoards2
                                g
                                (GHC.List.reverse1
                                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                                   (GHC.Base.map
                                      @ [Graphics.Gloss.Internals.Data.Picture.Picture]
                                      @ Graphics.Gloss.Internals.Data.Picture.Picture
                                      (\ (x1 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                                       Graphics.Gloss.Internals.Data.Picture.Pictures
                                         (Graphics.renderBoard_$soffsetF
                                            g
                                            Graphics.renderBoards2
                                            x1))
                                      (Helpers.Lists.$wsubDivide
                                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                                         (GHC.Prim.+# n 1#)
                                         (GHC.Base.map
                                            @ PegBoard.Board
                                            @ Graphics.Gloss.Internals.Data.Picture.Picture
                                            Graphics.renderBoard
                                            wild)))
                                   (GHC.Types.[]
                                      @ Graphics.Gloss.Internals.Data.Picture.Picture)) } }) }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

