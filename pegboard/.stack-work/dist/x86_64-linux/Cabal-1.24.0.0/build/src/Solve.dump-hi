
==================== FINAL INTERFACE ====================
2016-10-25 21:28:02.641948 UTC

interface pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:Solve 8001
  interface hash: 133ea2e1614d2c7ee05d44d72df5b982
  ABI hash: a75d731c22b42b944175b4bdf651a5da
  export-list hash: b013466c84f7bb3d68bd21e01e729d24
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Solve.promptStart
module dependencies: Analytics CriticalPoints Graphics
                     Helpers.Lists Helpers.Math PegBoard PlayGame
package dependencies: GLURaw-2.0.0.2@GLURaw-2.0.0.2-FbcPHzTa7vLEnCQ0kkJ8B4
                      GLUT-2.7.0.10@GLUT-2.7.0.10-A3NqGto8XAVI0ysflkZZW9
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-HHHIolNI8Pm5H3OGkgSUrO
                      OpenGL-3.0.1.0@OpenGL-3.0.1.0-2SQfSEFR02AIolFfoam9tJ
                      OpenGLRaw-3.2.2.0@OpenGLRaw-3.2.2.0-KWU3ruQNCGR7AsVafRovL
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-KF4xHl5RTVIp6NQI8dI2I
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-21JkkJmr6h52cZo1o8cauA ghc-prim-0.5.0.0
                      gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB
                      gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr
                      half-0.2.2.3@half-0.2.2.3-BFHx0LiJemg6baNXrjGThF
                      integer-gmp-1.0.0.1 stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss d5b982018b0c758f00994fce74453c04
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Color b525c333674d23cc8320332d7db6f0cc
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Display 23041d1e33431329e29c0f20d2656204
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Picture e95e53d5f841f673cdd330becc7218b6
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Interface.Pure.Game 2dd340a64cf43818f7fb9d5ecccf65d2
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Backend.Types 6dedaa7d5ac2b54ee5c9eafd16b95468
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Event 72f0eabd47b5e04e08135dc87ef0ee7a
import  -/  gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture 1b8e2c645c53408a68ac59ac66e45f2b
import  -/  Analytics 39eb14961649799faee79358a8534710
  exports: 5f24ac485a14b5105dd37a854fe5255d
  endWith 08c8a41016aa1ebe4f4019ac1617d34a
import  -/  Graphics c95348a5d07555ece418b9b94c5d5bd3
  exports: 3c1308225ea2e14f0de2a6b7d3a6490d
  offset fb1733ba8a7693fe6d9f7d70ecaeca8c
  renderBoard 0d2534e09146a3123f8807ba63506b49
import  -/  PegBoard e5ae7f741df6e5acec6857f64e0e15aa
  exports: fc07b7050cc2af4e0e64b548dbb35a86
  Board cd9bea143706f7f958a8ad2912e7aaf1
  Board a52c37830432dd53520a978725b1b57a
  Coord 591af5514d165424777ea458d4c4cda4
  Coord e90daf56cd239fe823a66b0baea38df2
  makeBoard b8e411a593f25aa6c8da7e759bd83aac
  removePeg 7669883da05b9be3ddafad995f598290
import  -/  PlayGame ea989d509c6118403d9cf21429970cf0
  exports: db98f7a3543cf5dfbe75863e31383cd6
  collectLog 44be3ac61c85cbe75109647fbf0017de
  playGameLog 4158eab4e094b8cdd9909af19f823652
02d633715151042965876b3195ad8c89
  $fEqSequence :: GHC.Classes.Eq Solve.Sequence
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Solve.Sequence Solve.$fEqSequence_$c== Solve.$fEqSequence_$c/= -}
02d633715151042965876b3195ad8c89
  $fEqSequence_$c/= ::
    Solve.Sequence -> Solve.Sequence -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Solve.Sequence) (b :: Solve.Sequence) ->
                 case Solve.$fEqSequence_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
02d633715151042965876b3195ad8c89
  $fEqSequence_$c== ::
    Solve.Sequence -> Solve.Sequence -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Solve.Sequence) (ds1 :: Solve.Sequence) ->
                 case ds of wild {
                   Solve.Seq a1
                   -> case ds1 of wild1 {
                        Solve.Seq b1
                        -> Graphics.Gloss.Internals.Data.Picture.$fEqPicture_$c== a1 b1
                        Solve.Seqs ipv ipv1 -> GHC.Types.False }
                   Solve.Seqs a1 a2
                   -> case ds1 of wild1 {
                        Solve.Seq ipv -> GHC.Types.False
                        Solve.Seqs b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  Graphics.Gloss.Internals.Data.Picture.$fEqPicture
                                  a1
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  Graphics.Gloss.Internals.Data.Picture.$fEqPicture
                                  a2
                                  b2 } } }) -}
6304ab382e0d433401e266af2fc6343b
  $tc'Seq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1195181283107584671##
                   5930153782961580035##
                   Solve.$trModule
                   Solve.$tc'Seq1) -}
76dbb0ed23172f3186d8529c48080159
  $tc'Seq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Seq"#) -}
b676b56baaed1f612528618e635d1b3d
  $tc'Seqs :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4599407225449500119##
                   3361552919252607126##
                   Solve.$trModule
                   Solve.$tc'Seqs1) -}
9256dd0a321b89191fb35b9b8c71f806
  $tc'Seqs1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Seqs"#) -}
8f92de47fe94b32934b19feed5fd7b36
  $tcSequence :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5717712950509096092##
                   18168109720081050818##
                   Solve.$trModule
                   Solve.$tcSequence1) -}
55c01a2d3db4f6cddb8d3c16c80698eb
  $tcSequence1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Sequence"#) -}
ccdc0654fa27a18daaf9604a3871d916
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Solve.$trModule2 Solve.$trModule1) -}
a8fb7c5b426d4d381899bce7bc3b9e69
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Solve"#) -}
2d97266ee88020a909bdd4a041ad7883
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2"#) -}
1f47c81efe610ca8197d5784ffb0f60f
  $wxs ::
    GHC.Prim.Int# -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
cbac7fbf5fdb364b725ad71c23ad74cd
  type CoordCollect =
    (PegBoard.Coord, GHC.Base.Maybe GHC.Types.Int, GHC.Types.Bool)
05e02ff0679228653206226d41025507
  type Prompts =
    ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
02d633715151042965876b3195ad8c89
  data Sequence
    = Seq Graphics.Gloss.Internals.Data.Picture.Picture
    | Seqs [Graphics.Gloss.Internals.Data.Picture.Picture]
           [Graphics.Gloss.Internals.Data.Picture.Picture]
a633e276e01e3e16282c6eb0321e606d
  emptyCoordCol :: Solve.CoordCollect
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Solve.promptStart6, GHC.Base.Nothing @ GHC.Types.Int,
                  GHC.Types.False)) -}
cdb34e5f510e6696da2e09b44e388efa
  promptStart :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Solve.promptStart1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
9f040b48f8283a807f1e50c89856e0e6
  promptStart1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.Gloss.Internals.Interface.Game.playWithBackendIO1
                        @ ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                        Solve.promptStart59
                        Graphics.Gloss.Data.Color.black
                        Solve.promptStart7
                        Solve.promptStart5
                        Solve.promptStart4
                          `cast`
                        (<([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Solve.promptStart3
                          `cast`
                        (<Graphics.Gloss.Internals.Interface.Event.Event>_R
                         ->_R <([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <([Solve.Sequence], [Solve.Sequence],
                                         Solve.CoordCollect)>_R))
                        Solve.promptStart2
                          `cast`
                        (<GHC.Types.Float>_R
                         ->_R <([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <([Solve.Sequence], [Solve.Sequence],
                                         Solve.CoordCollect)>_R))
                        GHC.Types.True
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
cd039fdc9ed08a2e3e868856d9d54c0e
  promptStart10 :: Solve.Sequence
  {- Unfolding: (Solve.Seq Solve.promptStart11) -}
04a223ee2d71fbb41b708013214b5f9c
  promptStart11 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptStart12) -}
4f347a1b6ffded88a38f8db4b3e3d349
  promptStart12 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptStart33
                   Solve.promptStart13) -}
481ecd90da2f7b4d85be4ef7361809f8
  promptStart13 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptStart14
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
1c3555381a3ca7e68f4f1290968afc7e
  promptStart14 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptStart15) -}
53e42b0f697c58783ff95390839f45dc
  promptStart15 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Solve.promptStart32
                   Solve.promptStart31
                   Solve.promptStart16) -}
022f65a19d23b5ab4888c6fd25e74a77
  promptStart16 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptStart17) -}
e2c1b7ab7c3828981c018ae2f75a226a
  promptStart17 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptStart30
                   Solve.promptStart29
                   Solve.promptStart18) -}
2517490d705b0ddffb6b982ccdc9f532
  promptStart18 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.promptStart20 Solve.promptStart19) -}
06aa62869bfb5e08f36607696d44ff0d
  promptStart19 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.$wxs 5#) -}
5d0a7c13ded8c467845794b406199712
  promptStart2 ::
    GHC.Types.Float
    -> ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect) #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (time :: GHC.Types.Float)
                   (world1 :: ([Solve.Sequence], [Solve.Sequence],
                               Solve.CoordCollect))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, world1 #)) -}
144c42a7a3c5eba86a435dcc6e28b66d
  promptStart20 ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Enum.enumDeltaToIntegerFB
                   @ ([Graphics.Gloss.Internals.Data.Picture.Picture]
                      -> [Graphics.Gloss.Internals.Data.Picture.Picture])
                   Solve.promptStart25
                   Solve.promptStart24
                   Solve.promptStart23
                   Solve.promptStart22
                   Solve.promptStart21) -}
f01fcdec999e980746f29ce769b6f17e
  promptStart21 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
50c11b200be36af4ce3e0aa2e18c0cf4
  promptStart22 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
19a49ed4b991ff82d898cd0873a3d6f2
  promptStart23 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
9edc4f5e9ba790a746a99b3b0b7cafd3
  promptStart24 ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (ds :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture) -}
2aebde52e975e3f9e0f97dd241c9afbe
  promptStart25 ::
    GHC.Integer.Type.Integer
    -> ([Graphics.Gloss.Internals.Data.Picture.Picture]
        -> [Graphics.Gloss.Internals.Data.Picture.Picture])
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2,
     Unfolding: (\ (ds :: GHC.Integer.Type.Integer)
                   (ds1 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
                           -> [Graphics.Gloss.Internals.Data.Picture.Picture])[OneShot] ->
                 let {
                   _x :: GHC.Base.String
                   = case GHC.Show.$w$cshowsPrec3
                            0#
                            ds
                            (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                     GHC.Types.: @ GHC.Types.Char ww3 ww4 }
                 } in
                 let {
                   _x1 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Text _x
                 } in
                 let {
                   _x2 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Scale
                       Solve.promptStart28
                       Solve.promptStart28
                       _x1
                 } in
                 let {
                   _x3 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Translate
                       Solve.promptStart27
                       Solve.promptStart26
                       _x2
                 } in
                 \ (ds2 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 case ds2 of wild {
                   [] -> GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture
                   : y ys
                   -> GHC.Types.:
                        @ Graphics.Gloss.Internals.Data.Picture.Picture
                        (Graphics.Gloss.Internals.Data.Picture.Pictures
                           (GHC.Types.:
                              @ Graphics.Gloss.Internals.Data.Picture.Picture
                              _x3
                              (GHC.Types.:
                                 @ Graphics.Gloss.Internals.Data.Picture.Picture
                                 y
                                 (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture))))
                        (ds1 ys) }) -}
80999cf2ea9944d67dee4497078c2e22
  promptStart26 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 36.0#) -}
8b681058f3ad9e1f487020d09c901ff5
  promptStart27 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 20.0#) -}
d38d0956e83ea0859e6fc82445736167
  promptStart28 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.1#) -}
5f9202c52a01cfead61bc17107ebf5c1
  promptStart29 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 16.0#) }) -}
567cd06cfa0e13f0554992facb0a40cd
  promptStart3 ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect) #)
  {- Arity: 3 -}
08b44d600e87cb0e95d5fd866dfbd054
  promptStart30 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) -8.0#) }) -}
39ab503a2894a9bae87e88a340a19e26
  promptStart31 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 8.0#) -}
68640fb5d05a34687a349a45df88eb6b
  promptStart32 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 104.0#) -}
a084f2367d4fea81b17bf713c744813a
  promptStart33 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (case Graphics.$wrenderBoard
                        Solve.promptStart34 of ww { Unit# ww1 ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures ww1 }) -}
668035e60cfdeba3e1f7d18e0774c01a
  promptStart34 :: PegBoard.Board
  {- Unfolding: (case PegBoard.$wmakeBoard
                        Solve.promptStart35 of ww { (#,#) ww1 ww2 ->
                 PegBoard.Board ww1 ww2 }) -}
177ebd29615e5972f6d110166a705edd
  promptStart35 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
893b4593f8aa984fb719a5571caf2c24
  promptStart36 :: Solve.Sequence
  {- Unfolding: (Solve.Seq Solve.promptStart37) -}
ed13efb396fc19547141c10913141b00
  promptStart37 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptStart38) -}
3c522939790c0c943205879a0fe12ccc
  promptStart38 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptStart29
                   Solve.promptStart57
                   Solve.promptStart39) -}
e0253f5b9da8b8e013311313197124bd
  promptStart39 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptStart51
                   Solve.promptStart40) -}
60738a0715862cbd39dc47bdc822dc2f
  promptStart4 ::
    ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Gloss.Internals.Data.Picture.Picture #)
  {- Arity: 2,
     Unfolding: (\ (x6 :: ([Solve.Sequence], [Solve.Sequence],
                           Solve.CoordCollect))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case x6 of wild { (,,) ds ds1 ds2 ->
                    case ds of wild1 {
                      [] -> Graphics.Gloss.Internals.Data.Picture.Blank
                      : p as
                      -> case p of wild2 {
                           Solve.Seq b -> b
                           Solve.Seqs as1 bs
                           -> GHC.List.head
                                @ Graphics.Gloss.Internals.Data.Picture.Picture
                                as1 } } } #)) -}
16fb4d91c2d732ea90b7cfa04d7b2c16
  promptStart40 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptStart42
                   Solve.promptStart41) -}
08c1af63c79730351479b2ac6ceb10a0
  promptStart41 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptStart33
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
bc039284aa24727c650a0f90dc4894eb
  promptStart42 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptStart43) -}
38f4971abffab1babe47b4b68d90035b
  promptStart43 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptStart44) -}
bb50548d0e3c1c0c94d79fa594640e50
  promptStart44 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.promptStart_go
                   Solve.promptStart48
                   Solve.promptStart45) -}
2cee81c1aa1b1dedbeb01c55bc4234af
  promptStart45 :: [GHC.Types.Float]
  {- Unfolding: (GHC.Real.numericEnumFromThenTo
                   @ GHC.Types.Float
                   GHC.Classes.$fOrdFloat
                   GHC.Float.$fFractionalFloat
                   Solve.promptStart47
                   Solve.promptStart31
                   Solve.promptStart46) -}
d8b697bdf2eb302f377f2958d097bbbe
  promptStart46 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 32.0#) -}
520a40be1ac9857917fe7adff08168fa
  promptStart47 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
dd0aa27d8d75ba53567793870deed3f7
  promptStart48 :: [GHC.Types.Float]
  {- Unfolding: (GHC.Real.numericEnumFromTo
                   @ GHC.Types.Float
                   GHC.Classes.$fOrdFloat
                   GHC.Float.$fFractionalFloat
                   Solve.promptStart50
                   Solve.promptStart49) -}
0c31af3d37a53db745eb78facc1f1a76
  promptStart49 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 5.0#) -}
a04987c0a45a01659ec138873c5b4202
  promptStart5 ::
    ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
  {- Unfolding: ((Solve.promptStart8, GHC.Types.[] @ Solve.Sequence,
                  Solve.emptyCoordCol)) -}
c7b0d6a2f7af263f655d8e462d999dd6
  promptStart50 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 1.0#) -}
5c8bdab85bbfd4e56f19402099e7b6f2
  promptStart51 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Solve.promptStart47
                   Solve.promptStart58
                   Solve.promptStart52) -}
9e86dc28e0d32ea43498a259a91ba348
  promptStart52 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptStart53) -}
b7a7b3423432a9b7263ba27b862de030
  promptStart53 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptStart54) -}
3f6f69f4c47a344ceeb90004232db993
  promptStart54 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptStart57
                   Solve.promptStart29
                   Solve.promptStart55) -}
6454391ab97c78548901f6f9a5964190
  promptStart55 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Enum.enumDeltaToIntegerFB
                   @ [Graphics.Gloss.Internals.Data.Picture.Picture]
                   Solve.promptStart56
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)
                   Solve.promptStart23
                   Solve.promptStart22
                   Solve.promptStart21) -}
6bae59b6a5ca20ec612b86e46b63f74a
  promptStart56 ::
    GHC.Integer.Type.Integer
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2,
     Unfolding: (\ (ds :: GHC.Integer.Type.Integer)
                   (ds1 :: [Graphics.Gloss.Internals.Data.Picture.Picture])[OneShot] ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   (Graphics.Gloss.Internals.Data.Picture.Scale
                      Solve.promptStart28
                      Solve.promptStart28
                      (Graphics.Gloss.Internals.Data.Picture.Text
                         (GHC.Show.$fShowInteger_$cshow ds)))
                   ds1) -}
90ff629edf0c4b5b0a2a545f0c57a0cc
  promptStart57 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 0.0#) }) -}
0613b4ac4938ee6372de84f5130366b9
  promptStart58 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -4.0#) -}
723530df12be9c5aebf5d2e7f5023746
  promptStart59 :: Graphics.Gloss.Data.Display.Display
  {- Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   Solve.promptStart63
                   Solve.promptStart61
                   Solve.promptStart60) -}
51bac9ca0ce71505182cf3a417821c26
  promptStart6 :: PegBoard.Coord
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (PegBoard.Coord
                   Solve.promptStart7
                   Solve.promptStart7) -}
41c90c857d3385dad02c9d559f7b6a18
  promptStart60 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs,
     Unfolding: ((Solve.promptStart7, Solve.promptStart7)) -}
e7b96c1145e385081fcf9adc3f7bfa9c
  promptStart61 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs,
     Unfolding: ((Solve.promptStart62, Solve.promptStart62)) -}
abf97453eea0497c330167aa268ca9f2
  promptStart62 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 600#) -}
c5f48ab616606c3a78704175b18757cc
  promptStart63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SolvePrompted"#) -}
7e7996523feafb15de9abc3f585968f1
  promptStart7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
fbee4c41823859bce930e55409b4963f
  promptStart8 :: [Solve.Sequence]
  {- Unfolding: (GHC.Types.:
                   @ Solve.Sequence
                   Solve.promptStart36
                   Solve.promptStart9) -}
4f727b8c8b2ce9c76ba1b6b66df084f9
  promptStart9 :: [Solve.Sequence]
  {- Unfolding: (GHC.Types.:
                   @ Solve.Sequence
                   Solve.promptStart10
                   (GHC.Types.[] @ Solve.Sequence)) -}
95661fd94b7de462ff5caeb7ac2cb2df
  promptStart_go ::
    [GHC.Types.Float]
    -> [GHC.Types.Float]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
instance GHC.Classes.Eq [Solve.Sequence] = Solve.$fEqSequence
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

