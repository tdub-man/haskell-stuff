
==================== FINAL INTERFACE ====================
2016-11-12 22:41:08.996461 UTC

interface pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:Solve 8001
  interface hash: 96d278f2fa0cf863875b40a763915008
  ABI hash: def08dbf49d80800e537abe23f98fcce
  export-list hash: 37f488ad4b3919da239b5a72a04fc9d7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Solve.promptSolve
module dependencies: Analytics CriticalPoints Graphics
                     Helpers.Lists Helpers.Math PegBoard PegBoardMove PlayGame
                     Symmetries
package dependencies: GLURaw-2.0.0.2@GLURaw-2.0.0.2-FbcPHzTa7vLEnCQ0kkJ8B4
                      GLUT-2.7.0.10@GLUT-2.7.0.10-A3NqGto8XAVI0ysflkZZW9
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-HHHIolNI8Pm5H3OGkgSUrO
                      OpenGL-3.0.1.0@OpenGL-3.0.1.0-2SQfSEFR02AIolFfoam9tJ
                      OpenGLRaw-3.2.2.0@OpenGLRaw-3.2.2.0-KWU3ruQNCGR7AsVafRovL
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-KF4xHl5RTVIp6NQI8dI2I
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-21JkkJmr6h52cZo1o8cauA ghc-prim-0.5.0.0
                      gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB
                      gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr
                      half-0.2.2.3@half-0.2.2.3-BFHx0LiJemg6baNXrjGThF
                      integer-gmp-1.0.0.1 stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss d5b982018b0c758f00994fce74453c04
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Color b525c333674d23cc8320332d7db6f0cc
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Display 23041d1e33431329e29c0f20d2656204
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Picture e95e53d5f841f673cdd330becc7218b6
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Interface.Pure.Game 2dd340a64cf43818f7fb9d5ecccf65d2
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Backend.Types 6dedaa7d5ac2b54ee5c9eafd16b95468
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Event 72f0eabd47b5e04e08135dc87ef0ee7a
import  -/  gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture 1b8e2c645c53408a68ac59ac66e45f2b
import  -/  Analytics f838ffe95c81d62560a8c6b5498ee6f3
  exports: f7e9d11b8ff150a18249c1b08395b5a8
  endWith 4bd0c3b8f21ef251c9d11570450595ee
import  -/  Graphics 0bde4143f519ae9bcb6cc3f2ae806160
  exports: 3c1308225ea2e14f0de2a6b7d3a6490d
  offset fb1733ba8a7693fe6d9f7d70ecaeca8c
  renderBoard 8ed355beea3e14b7e862959664c6aa97
import  -/  PegBoard 700fa327013234a57c766ef736b97bb2
  exports: d9e5ef2267766e7ae3b457c51282f54d
  Board dd84e3e13f591df253c023fdeb6d0fac
  Board 88c3b97cf1f38c14492f474b5ab8ce85
  Coord da8073910dff9584368414866999997b
  Coord e848d92561720a4b1c6dee3cfa88409d
  makeBoard bc525de14674e773a0394f15339e38fe
  removePeg ea1cb54766fa6f4c220bfea2979e5c89
import  -/  PlayGame 33dcc890daf23cb58c28e0429f285f74
  exports: db98f7a3543cf5dfbe75863e31383cd6
  collectLog d50cb14233bc66d28cd8bfc3ee05c610
  playGameLog 57bb2db0471df9649c8412185aa8700d
02d633715151042965876b3195ad8c89
  $fEqSequence :: GHC.Classes.Eq Solve.Sequence
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Solve.Sequence Solve.$fEqSequence_$c== Solve.$fEqSequence_$c/= -}
02d633715151042965876b3195ad8c89
  $fEqSequence_$c/= ::
    Solve.Sequence -> Solve.Sequence -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Solve.Sequence) (b :: Solve.Sequence) ->
                 case Solve.$fEqSequence_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
02d633715151042965876b3195ad8c89
  $fEqSequence_$c== ::
    Solve.Sequence -> Solve.Sequence -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Solve.Sequence) (ds1 :: Solve.Sequence) ->
                 case ds of wild {
                   Solve.Seq a1
                   -> case ds1 of wild1 {
                        Solve.Seq b1
                        -> Graphics.Gloss.Internals.Data.Picture.$fEqPicture_$c== a1 b1
                        Solve.Seqs ipv ipv1 -> GHC.Types.False }
                   Solve.Seqs a1 a2
                   -> case ds1 of wild1 {
                        Solve.Seq ipv -> GHC.Types.False
                        Solve.Seqs b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  Graphics.Gloss.Internals.Data.Picture.$fEqPicture
                                  a1
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  Graphics.Gloss.Internals.Data.Picture.$fEqPicture
                                  a2
                                  b2 } } }) -}
6304ab382e0d433401e266af2fc6343b
  $tc'Seq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1195181283107584671##
                   5930153782961580035##
                   Solve.$trModule
                   Solve.$tc'Seq1) -}
76dbb0ed23172f3186d8529c48080159
  $tc'Seq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Seq"#) -}
b676b56baaed1f612528618e635d1b3d
  $tc'Seqs :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4599407225449500119##
                   3361552919252607126##
                   Solve.$trModule
                   Solve.$tc'Seqs1) -}
9256dd0a321b89191fb35b9b8c71f806
  $tc'Seqs1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Seqs"#) -}
8f92de47fe94b32934b19feed5fd7b36
  $tcSequence :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5717712950509096092##
                   18168109720081050818##
                   Solve.$trModule
                   Solve.$tcSequence1) -}
55c01a2d3db4f6cddb8d3c16c80698eb
  $tcSequence1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Sequence"#) -}
ccdc0654fa27a18daaf9604a3871d916
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Solve.$trModule2 Solve.$trModule1) -}
a8fb7c5b426d4d381899bce7bc3b9e69
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Solve"#) -}
2d97266ee88020a909bdd4a041ad7883
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2"#) -}
1f47c81efe610ca8197d5784ffb0f60f
  $wxs ::
    GHC.Prim.Int# -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
1c5a490cd84501b300d4609ad45c38d1
  type CoordCollect =
    (PegBoard.Coord, GHC.Base.Maybe GHC.Types.Int, GHC.Types.Bool)
c32df30503eec86196c8fef8959ea327
  type CountCollect = (GHC.Types.Int, GHC.Types.Bool)
0e8c9894f1def2b1a8b36f66a149971c
  type InputCollect =
    (Solve.CountCollect, Solve.CoordCollect, [GHC.Types.Int])
fcf146e5f3506c1dae1db0a963fa118b
  type MouseMove = (GHC.Types.Bool, GHC.Types.Float, GHC.Types.Float)
eafbd83c9ee212fc49b55827e81f097b
  type Prompts =
    ([Solve.Sequence], [Solve.Sequence], Solve.InputCollect,
     Solve.WorldTrans)
36b9180868c858b56dbb6a8c11f7f4b7
  type Scale = GHC.Types.Float
02d633715151042965876b3195ad8c89
  data Sequence
    = Seq Graphics.Gloss.Internals.Data.Picture.Picture
    | Seqs [Graphics.Gloss.Internals.Data.Picture.Picture]
           [Graphics.Gloss.Internals.Data.Picture.Picture]
8bfc9dc2b808a9a8c7b024227f728e8a
  type Translate = (GHC.Types.Float, GHC.Types.Float)
75fcf3f4c67df13dfd10b749bf0e20bc
  type WorldTrans = (Solve.Scale, Solve.Translate, Solve.MouseMove)
0d843803ba0f62dafa222972fb1a7a0f
  emptyInputCol :: Solve.InputCollect
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Solve.promptSolve14, Solve.promptSolve11,
                  GHC.Types.[] @ GHC.Types.Int)) -}
5ee552d89ba5185f5083461449a8b737
  promptSolve :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Solve.promptSolve1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
321c23776a9c540b7c41885a960b9f8d
  promptSolve1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.Gloss.Internals.Interface.Game.playWithBackendIO1
                        @ Solve.Prompts
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                        Solve.promptSolve72
                        Graphics.Gloss.Data.Color.black
                        Solve.promptSolve13
                        Solve.promptSolve5
                        Solve.promptSolve4
                          `cast`
                        (<Solve.Prompts>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Solve.promptSolve3
                          `cast`
                        (<Graphics.Gloss.Internals.Interface.Event.Event>_R
                         ->_R <Solve.Prompts>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Solve.Prompts>_R))
                        Solve.promptSolve2
                          `cast`
                        (<GHC.Types.Float>_R
                         ->_R <Solve.Prompts>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Solve.Prompts>_R))
                        GHC.Types.True
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
ecf00f1a574e3d7eb1eb9cf2c83561d5
  promptSolve10 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 1.0#) -}
3131d71c23653d36988cc2da602a01a1
  promptSolve11 ::
    (PegBoard.Coord, GHC.Base.Maybe GHC.Types.Int, GHC.Types.Bool)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Solve.promptSolve12, GHC.Base.Nothing @ GHC.Types.Int,
                  GHC.Types.False)) -}
9df3b0057c2abea1213cccd5e5975e70
  promptSolve12 :: PegBoard.Coord
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (PegBoard.Coord
                   Solve.promptSolve13
                   Solve.promptSolve13) -}
18b61ef979cd2fdf03977d4a37f0fcbf
  promptSolve13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
5bad1d0c60bb39f8fde876772ffe9ec9
  promptSolve14 :: (GHC.Types.Int, GHC.Types.Bool)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Solve.promptSolve13, GHC.Types.False)) -}
a89a6b462a9d568c01aa597a1069df9d
  promptSolve15 :: [Solve.Sequence]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Solve.Sequence
                   Solve.promptSolve67
                   Solve.promptSolve16) -}
00368cd1ee970b00c07c2d1e9bffdafa
  promptSolve16 :: [Solve.Sequence]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Solve.Sequence
                   Solve.promptSolve44
                   Solve.promptSolve17) -}
6d30224280bcfc697f80c86dcf8a4dc9
  promptSolve17 :: [Solve.Sequence]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Solve.Sequence
                   Solve.promptSolve18
                   (GHC.Types.[] @ Solve.Sequence)) -}
fc6aa2a46c333464c5cf4b91826181ef
  promptSolve18 :: Solve.Sequence
  {- Strictness: m1, Unfolding: (Solve.Seq Solve.promptSolve19) -}
4fc756ceb29da47e3f467de7622ff4ba
  promptSolve19 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m14,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve20) -}
b4f031ff04f40509a9829236757bcb61
  promptSolve2 ::
    GHC.Types.Float
    -> Solve.Prompts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Solve.Prompts #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (time :: GHC.Types.Float)
                   (world1 :: Solve.Prompts)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, world1 #)) -}
b0246326f68841f36a9d7d760809a167
  promptSolve20 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve41
                   Solve.promptSolve21) -}
36c8355626cbaf5b02064fceba4397fe
  promptSolve21 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve22
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
eb3eaf13337d28f55ba7a8a32f0a600b
  promptSolve22 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve23) -}
404502660cbfe1920fb57f267b6f6230
  promptSolve23 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m11,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Solve.promptSolve40
                   Solve.promptSolve39
                   Solve.promptSolve24) -}
7ebae4c2bd5d6dad12b79e19a771564f
  promptSolve24 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m14,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve25) -}
25934e678368a3b4c4868641619fe589
  promptSolve25 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptSolve38
                   Solve.promptSolve37
                   Solve.promptSolve26) -}
ad4329aab74a02d88cc7500adf6313e5
  promptSolve26 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.promptSolve28 Solve.promptSolve27) -}
91e6e3c8cd59df963e7c50efe68377f7
  promptSolve27 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.$wxs 5#) -}
12f6a9b5f58c4b2a2c06185fafc95d2a
  promptSolve28 ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Enum.enumDeltaToIntegerFB
                   @ ([Graphics.Gloss.Internals.Data.Picture.Picture]
                      -> [Graphics.Gloss.Internals.Data.Picture.Picture])
                   Solve.promptSolve33
                   Solve.promptSolve32
                   Solve.promptSolve31
                   Solve.promptSolve30
                   Solve.promptSolve29) -}
09008205ef4deb8a59f6cbdb4cab53c7
  promptSolve29 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
30d3ba6df85ec6cda26218745d1d0360
  promptSolve3 ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> Solve.Prompts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Solve.Prompts #)
  {- Arity: 3 -}
4476ba587f2dbeea1eeb48f260734608
  promptSolve30 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
d7170af4be5234116a1bfc568027ed97
  promptSolve31 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
e12d7240f3953707d8d957818aee7422
  promptSolve32 ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (ds :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture) -}
42397953e68b4f1f6326366492a41ee4
  promptSolve33 ::
    GHC.Integer.Type.Integer
    -> ([Graphics.Gloss.Internals.Data.Picture.Picture]
        -> [Graphics.Gloss.Internals.Data.Picture.Picture])
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2,
     Unfolding: (\ (ds :: GHC.Integer.Type.Integer)
                   (ds1 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
                           -> [Graphics.Gloss.Internals.Data.Picture.Picture])[OneShot] ->
                 let {
                   _x :: GHC.Base.String
                   = case GHC.Show.$w$cshowsPrec3
                            0#
                            ds
                            (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                     GHC.Types.: @ GHC.Types.Char ww3 ww4 }
                 } in
                 let {
                   _x1 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Text _x
                 } in
                 let {
                   _x2 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Scale
                       Solve.promptSolve36
                       Solve.promptSolve36
                       _x1
                 } in
                 let {
                   _x3 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Translate
                       Solve.promptSolve35
                       Solve.promptSolve34
                       _x2
                 } in
                 \ (ds2 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 case ds2 of wild {
                   [] -> GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture
                   : y ys
                   -> GHC.Types.:
                        @ Graphics.Gloss.Internals.Data.Picture.Picture
                        (Graphics.Gloss.Internals.Data.Picture.Pictures
                           (GHC.Types.:
                              @ Graphics.Gloss.Internals.Data.Picture.Picture
                              _x3
                              (GHC.Types.:
                                 @ Graphics.Gloss.Internals.Data.Picture.Picture
                                 y
                                 (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture))))
                        (ds1 ys) }) -}
69a508dbeb00eaba4dd710970fdc96ce
  promptSolve34 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 36.0#) -}
333fd96f7fcd3f0c88ea25e1b39b0c3c
  promptSolve35 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 20.0#) -}
899084635e0af31f74ae7f8ba3c64175
  promptSolve36 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.1#) -}
f80d672ed136892538917a19abb2f99e
  promptSolve37 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 16.0#) }) -}
ae0cfbe5c32b907c2320cc694b070296
  promptSolve38 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) -8.0#) }) -}
33a45c069433b180b2161ff14ae391d1
  promptSolve39 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 8.0#) -}
57b2ce0711ab6505c65c9db5359250f8
  promptSolve4 ::
    Solve.Prompts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Gloss.Internals.Data.Picture.Picture #)
  {- Arity: 2,
     Unfolding: (\ (x5 :: Solve.Prompts)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case x5 of wild { (,,,) ds ds1 ds2 ds3 ->
                    case ds of wild1 {
                      [] -> Graphics.Gloss.Internals.Data.Picture.Blank
                      : p as
                      -> case ds3 of wild2 { (,,) s1 ds4 ds5 ->
                         case ds4 of wild3 { (,) tx ty ->
                         Graphics.Gloss.Internals.Data.Picture.Scale
                           s1
                           s1
                           (Graphics.Gloss.Internals.Data.Picture.Translate
                              (GHC.Float.divideFloat tx s1)
                              (GHC.Float.divideFloat ty s1)
                              (case p of wild4 {
                                 Solve.Seq b -> b
                                 Solve.Seqs as1 bs
                                 -> GHC.List.head
                                      @ Graphics.Gloss.Internals.Data.Picture.Picture
                                      as1 })) } } } } #)) -}
afc20b0b9eeb8206eabcac94587423cf
  promptSolve40 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 104.0#) -}
7668b814711627cb25681adbfd9e2e74
  promptSolve41 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (case Graphics.$wrenderBoard
                        Solve.promptSolve42 of ww { Unit# ww1 ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures ww1 }) -}
9472059f2b404730fd743ddfca959a53
  promptSolve42 :: PegBoard.Board
  {- Unfolding: (case PegBoard.$wmakeBoard
                        Solve.promptSolve43 of ww { (#,#) ww1 ww2 ->
                 PegBoard.Board ww1 ww2 }) -}
dee06421e844e7b2ffc142d3473b1119
  promptSolve43 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
e9d95f8de32db78b33aa7c8990902ae1
  promptSolve44 :: Solve.Sequence
  {- Strictness: m1, Unfolding: (Solve.Seq Solve.promptSolve45) -}
d70abeb8ff4a0b8ab7888deb2a31fc04
  promptSolve45 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m11,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Solve.promptSolve66
                   Solve.promptSolve8
                   Solve.promptSolve46) -}
540a4656a33484010989643d320d4f95
  promptSolve46 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m14,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve47) -}
4f2319c1b1d10ef5a4ca086d9133f69b
  promptSolve47 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptSolve37
                   Solve.promptSolve64
                   Solve.promptSolve48) -}
0a4b787526bd1e105b48c479b6dfbcb5
  promptSolve48 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve58
                   Solve.promptSolve49) -}
c11ba574af4b9271fa3cecf43f75691b
  promptSolve49 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve51
                   Solve.promptSolve50) -}
3462f3a4a96424ce5d23b52cf38cb188
  promptSolve5 ::
    ([Solve.Sequence], [Solve.Sequence], Solve.InputCollect,
     Solve.WorldTrans)
  {- Unfolding: ((Solve.promptSolve15, GHC.Types.[] @ Solve.Sequence,
                  Solve.emptyInputCol, Solve.promptSolve6)) -}
62d88b5004f85c63272396eee23add8c
  promptSolve50 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve41
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
1137c456e8b0fc4a864788dcbd933be4
  promptSolve51 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve52) -}
9ad6a1fa79b94089c3fdfcb511f5af74
  promptSolve52 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve53) -}
2f4a964b3c58799125d2ce8bf64d576a
  promptSolve53 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.promptSolve_go
                   Solve.promptSolve56
                   Solve.promptSolve54) -}
b4dc9a0082b48b9e693eb0f5a71cc933
  promptSolve54 :: [GHC.Types.Float]
  {- Unfolding: (GHC.Real.numericEnumFromThenTo
                   @ GHC.Types.Float
                   GHC.Classes.$fOrdFloat
                   GHC.Float.$fFractionalFloat
                   Solve.promptSolve8
                   Solve.promptSolve39
                   Solve.promptSolve55) -}
ef2c881037d5b32236eccce91e614b59
  promptSolve55 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 32.0#) -}
a13d15be8d8b5f1d873aa2218219fad9
  promptSolve56 :: [GHC.Types.Float]
  {- Unfolding: (GHC.Real.numericEnumFromTo
                   @ GHC.Types.Float
                   GHC.Classes.$fOrdFloat
                   GHC.Float.$fFractionalFloat
                   Solve.promptSolve10
                   Solve.promptSolve57) -}
9dc181e882c903c884a187f8421e5948
  promptSolve57 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 5.0#) -}
8a6375b83b099f152ac52d405d2f058c
  promptSolve58 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Solve.promptSolve8
                   Solve.promptSolve65
                   Solve.promptSolve59) -}
b9f52ab936010809e3e93b79d60807a6
  promptSolve59 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve60) -}
995a4939f3efefb06d75a50601b257e5
  promptSolve6 ::
    (Solve.Scale, (GHC.Types.Float, GHC.Types.Float),
     (GHC.Types.Bool, GHC.Types.Float, GHC.Types.Float))
  {- HasNoCafRefs,
     Unfolding: ((Solve.promptSolve10, Solve.promptSolve9,
                  Solve.promptSolve7)) -}
6d356717268f9e698b727e0775fda6ce
  promptSolve60 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve61) -}
54b28996704c66ceb585749c90eef4be
  promptSolve61 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptSolve64
                   Solve.promptSolve37
                   Solve.promptSolve62) -}
3594bff02a24a97f0c040039d1707c8c
  promptSolve62 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Enum.enumDeltaToIntegerFB
                   @ [Graphics.Gloss.Internals.Data.Picture.Picture]
                   Solve.promptSolve63
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)
                   Solve.promptSolve31
                   Solve.promptSolve30
                   Solve.promptSolve29) -}
471b3b8d7138c12d91a187b93bd43bb1
  promptSolve63 ::
    GHC.Integer.Type.Integer
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2,
     Unfolding: (\ (ds :: GHC.Integer.Type.Integer)
                   (ds1 :: [Graphics.Gloss.Internals.Data.Picture.Picture])[OneShot] ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   (Graphics.Gloss.Internals.Data.Picture.Scale
                      Solve.promptSolve36
                      Solve.promptSolve36
                      (Graphics.Gloss.Internals.Data.Picture.Text
                         (GHC.Show.$fShowInteger_$cshow ds)))
                   ds1) -}
a3a81f52d03dd79f82f1f98ca8d91c34
  promptSolve64 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 0.0#) }) -}
ba662f18e953e9a543707e3dea3df159
  promptSolve65 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -4.0#) -}
5b1480275909d5b7137981ba18697b4b
  promptSolve66 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# -48.0#) -}
f602b5c4e936f14fd73f8f4b36309ce1
  promptSolve67 :: Solve.Sequence
  {- Strictness: m1, Unfolding: (Solve.Seq Solve.promptSolve68) -}
603560db79cfb266fe4c8ffe3f59eb0a
  promptSolve68 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve69) -}
e5ff70f5c9dfa50f6834cdfca98ce7d9
  promptSolve69 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m13,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Scale
                   Solve.promptSolve36
                   Solve.promptSolve36
                   Solve.promptSolve70) -}
6b7b0bf8983eec731019eb81114c9c29
  promptSolve7 :: (GHC.Types.Bool, GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Types.False, Solve.promptSolve8,
                  Solve.promptSolve8)) -}
a872cd6b96b584a1be0b68a021a249ac
  promptSolve70 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m8,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Text
                   Solve.promptSolve71) -}
ba7e9c4b14bdd47820715b530c75e5b5
  promptSolve71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Enter number of pegs to end with"#) -}
4f37ab83ee320369ee8101edac2e2776
  promptSolve72 :: Graphics.Gloss.Data.Display.Display
  {- Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   Solve.promptSolve76
                   Solve.promptSolve74
                   Solve.promptSolve73) -}
3fec56fb2880811a37302459f4592025
  promptSolve73 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs,
     Unfolding: ((Solve.promptSolve13, Solve.promptSolve13)) -}
1c9a050e62f8d500afecf15bffc22273
  promptSolve74 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs,
     Unfolding: ((Solve.promptSolve75, Solve.promptSolve75)) -}
aa80f2f39b4a4049f67bbf70322bf57b
  promptSolve75 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 600#) -}
b1abb0730d918ed70149e446a75e8167
  promptSolve76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SolvePrompted"#) -}
d9b752f654573ba807f4935a0269de9d
  promptSolve8 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
0d020fb69b460e4e4b72c37a55a8498e
  promptSolve9 :: (GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Solve.promptSolve8, Solve.promptSolve8)) -}
017471430e184176daeb8868317324e9
  promptSolve_go ::
    [GHC.Types.Float]
    -> [GHC.Types.Float]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
instance GHC.Classes.Eq [Solve.Sequence] = Solve.$fEqSequence
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

