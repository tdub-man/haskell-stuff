
==================== FINAL INTERFACE ====================
2016-10-26 03:59:47.465007 UTC

interface pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:Solve 8001
  interface hash: dd2ca3febac74eaa027129a2d2b9a9f4
  ABI hash: 9982b33d1bbaf01bb6e2ff0ad098dd47
  export-list hash: 37f488ad4b3919da239b5a72a04fc9d7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Solve.promptSolve
module dependencies: Analytics CriticalPoints Graphics
                     Helpers.Lists Helpers.Math PegBoard PlayGame
package dependencies: GLURaw-2.0.0.2@GLURaw-2.0.0.2-FbcPHzTa7vLEnCQ0kkJ8B4
                      GLUT-2.7.0.10@GLUT-2.7.0.10-A3NqGto8XAVI0ysflkZZW9
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-HHHIolNI8Pm5H3OGkgSUrO
                      OpenGL-3.0.1.0@OpenGL-3.0.1.0-2SQfSEFR02AIolFfoam9tJ
                      OpenGLRaw-3.2.2.0@OpenGLRaw-3.2.2.0-KWU3ruQNCGR7AsVafRovL
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-KF4xHl5RTVIp6NQI8dI2I
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-21JkkJmr6h52cZo1o8cauA ghc-prim-0.5.0.0
                      gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB
                      gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr
                      half-0.2.2.3@half-0.2.2.3-BFHx0LiJemg6baNXrjGThF
                      integer-gmp-1.0.0.1 stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss d5b982018b0c758f00994fce74453c04
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Color b525c333674d23cc8320332d7db6f0cc
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Display 23041d1e33431329e29c0f20d2656204
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Picture e95e53d5f841f673cdd330becc7218b6
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Interface.Pure.Game 2dd340a64cf43818f7fb9d5ecccf65d2
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Backend.Types 6dedaa7d5ac2b54ee5c9eafd16b95468
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Event 72f0eabd47b5e04e08135dc87ef0ee7a
import  -/  gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture 1b8e2c645c53408a68ac59ac66e45f2b
import  -/  Analytics 39eb14961649799faee79358a8534710
  exports: 5f24ac485a14b5105dd37a854fe5255d
  endWith 08c8a41016aa1ebe4f4019ac1617d34a
import  -/  Graphics b8806d4321f7ed4c100be3f286a28657
  exports: 3c1308225ea2e14f0de2a6b7d3a6490d
  offset fb1733ba8a7693fe6d9f7d70ecaeca8c
  renderBoard 0d2534e09146a3123f8807ba63506b49
import  -/  PegBoard e5ae7f741df6e5acec6857f64e0e15aa
  exports: fc07b7050cc2af4e0e64b548dbb35a86
  Board cd9bea143706f7f958a8ad2912e7aaf1
  Board a52c37830432dd53520a978725b1b57a
  Coord 591af5514d165424777ea458d4c4cda4
  Coord e90daf56cd239fe823a66b0baea38df2
  makeBoard b8e411a593f25aa6c8da7e759bd83aac
  removePeg 7669883da05b9be3ddafad995f598290
import  -/  PlayGame ea989d509c6118403d9cf21429970cf0
  exports: db98f7a3543cf5dfbe75863e31383cd6
  collectLog 44be3ac61c85cbe75109647fbf0017de
  playGameLog 4158eab4e094b8cdd9909af19f823652
02d633715151042965876b3195ad8c89
  $fEqSequence :: GHC.Classes.Eq Solve.Sequence
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Solve.Sequence Solve.$fEqSequence_$c== Solve.$fEqSequence_$c/= -}
02d633715151042965876b3195ad8c89
  $fEqSequence_$c/= ::
    Solve.Sequence -> Solve.Sequence -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Solve.Sequence) (b :: Solve.Sequence) ->
                 case Solve.$fEqSequence_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
02d633715151042965876b3195ad8c89
  $fEqSequence_$c== ::
    Solve.Sequence -> Solve.Sequence -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Solve.Sequence) (ds1 :: Solve.Sequence) ->
                 case ds of wild {
                   Solve.Seq a1
                   -> case ds1 of wild1 {
                        Solve.Seq b1
                        -> Graphics.Gloss.Internals.Data.Picture.$fEqPicture_$c== a1 b1
                        Solve.Seqs ipv ipv1 -> GHC.Types.False }
                   Solve.Seqs a1 a2
                   -> case ds1 of wild1 {
                        Solve.Seq ipv -> GHC.Types.False
                        Solve.Seqs b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  Graphics.Gloss.Internals.Data.Picture.$fEqPicture
                                  a1
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  Graphics.Gloss.Internals.Data.Picture.$fEqPicture
                                  a2
                                  b2 } } }) -}
6304ab382e0d433401e266af2fc6343b
  $tc'Seq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1195181283107584671##
                   5930153782961580035##
                   Solve.$trModule
                   Solve.$tc'Seq1) -}
76dbb0ed23172f3186d8529c48080159
  $tc'Seq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Seq"#) -}
b676b56baaed1f612528618e635d1b3d
  $tc'Seqs :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4599407225449500119##
                   3361552919252607126##
                   Solve.$trModule
                   Solve.$tc'Seqs1) -}
9256dd0a321b89191fb35b9b8c71f806
  $tc'Seqs1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Seqs"#) -}
8f92de47fe94b32934b19feed5fd7b36
  $tcSequence :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5717712950509096092##
                   18168109720081050818##
                   Solve.$trModule
                   Solve.$tcSequence1) -}
55c01a2d3db4f6cddb8d3c16c80698eb
  $tcSequence1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Sequence"#) -}
ccdc0654fa27a18daaf9604a3871d916
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Solve.$trModule2 Solve.$trModule1) -}
a8fb7c5b426d4d381899bce7bc3b9e69
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Solve"#) -}
2d97266ee88020a909bdd4a041ad7883
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2"#) -}
1f47c81efe610ca8197d5784ffb0f60f
  $wxs ::
    GHC.Prim.Int# -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
cbac7fbf5fdb364b725ad71c23ad74cd
  type CoordCollect =
    (PegBoard.Coord, GHC.Base.Maybe GHC.Types.Int, GHC.Types.Bool)
05e02ff0679228653206226d41025507
  type Prompts =
    ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
02d633715151042965876b3195ad8c89
  data Sequence
    = Seq Graphics.Gloss.Internals.Data.Picture.Picture
    | Seqs [Graphics.Gloss.Internals.Data.Picture.Picture]
           [Graphics.Gloss.Internals.Data.Picture.Picture]
cf44151e504690ec4d5b584f3aa05f85
  emptyCoordCol :: Solve.CoordCollect
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Solve.promptSolve6, GHC.Base.Nothing @ GHC.Types.Int,
                  GHC.Types.False)) -}
2bfa37601bbb876cfa545e8a0b8c9af2
  promptSolve :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Solve.promptSolve1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
399bd3a8acfc392a8bca31d939d8cb65
  promptSolve1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.Gloss.Internals.Interface.Game.playWithBackendIO1
                        @ ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                        Solve.promptSolve59
                        Graphics.Gloss.Data.Color.black
                        Solve.promptSolve7
                        Solve.promptSolve5
                        Solve.promptSolve4
                          `cast`
                        (<([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Solve.promptSolve3
                          `cast`
                        (<Graphics.Gloss.Internals.Interface.Event.Event>_R
                         ->_R <([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <([Solve.Sequence], [Solve.Sequence],
                                         Solve.CoordCollect)>_R))
                        Solve.promptSolve2
                          `cast`
                        (<GHC.Types.Float>_R
                         ->_R <([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <([Solve.Sequence], [Solve.Sequence],
                                         Solve.CoordCollect)>_R))
                        GHC.Types.True
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
a6f54c27ffc4f24224c97d0c88febc57
  promptSolve10 :: Solve.Sequence
  {- Unfolding: (Solve.Seq Solve.promptSolve11) -}
67f3ef72901b59fc926e816a3b6b8ee9
  promptSolve11 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve12) -}
57e088bc5b109ad9f21007ae7ea4cd99
  promptSolve12 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve33
                   Solve.promptSolve13) -}
b5d37bd11dfba26a918731b6cb32e64e
  promptSolve13 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve14
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
a74a2cbb78132e42edbfe6a7cb432edc
  promptSolve14 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve15) -}
802e00fb6404b2ff65eb83b2e151acf6
  promptSolve15 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Solve.promptSolve32
                   Solve.promptSolve31
                   Solve.promptSolve16) -}
1ceb0e1cad2153649adde6d22d965368
  promptSolve16 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve17) -}
d987a428a741ea5e9a479c3524e22bbb
  promptSolve17 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptSolve30
                   Solve.promptSolve29
                   Solve.promptSolve18) -}
590360d123158b212ca3d024b12ef95d
  promptSolve18 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.promptSolve20 Solve.promptSolve19) -}
38f3984703c08b4fe7307772e41335ae
  promptSolve19 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.$wxs 5#) -}
edbda50ab437dc949ff6a2a0dc2b08c2
  promptSolve2 ::
    GHC.Types.Float
    -> ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect) #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (time :: GHC.Types.Float)
                   (world1 :: ([Solve.Sequence], [Solve.Sequence],
                               Solve.CoordCollect))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, world1 #)) -}
f5dcdd59fac7cf100ba1f21d938ea0b4
  promptSolve20 ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Enum.enumDeltaToIntegerFB
                   @ ([Graphics.Gloss.Internals.Data.Picture.Picture]
                      -> [Graphics.Gloss.Internals.Data.Picture.Picture])
                   Solve.promptSolve25
                   Solve.promptSolve24
                   Solve.promptSolve23
                   Solve.promptSolve22
                   Solve.promptSolve21) -}
6c22fdeca64d77b15bf0afdf06ea773a
  promptSolve21 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
7cc5aedb59968e9b8136d62ca3e34806
  promptSolve22 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
bcc5c4ec603e30a1b2eb6176999a9124
  promptSolve23 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
8bba4332f36250fd0780d0af82bce306
  promptSolve24 ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (ds :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture) -}
ae42e00790a4aceb2f80b7fa475bdf0f
  promptSolve25 ::
    GHC.Integer.Type.Integer
    -> ([Graphics.Gloss.Internals.Data.Picture.Picture]
        -> [Graphics.Gloss.Internals.Data.Picture.Picture])
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2,
     Unfolding: (\ (ds :: GHC.Integer.Type.Integer)
                   (ds1 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
                           -> [Graphics.Gloss.Internals.Data.Picture.Picture])[OneShot] ->
                 let {
                   _x :: GHC.Base.String
                   = case GHC.Show.$w$cshowsPrec3
                            0#
                            ds
                            (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                     GHC.Types.: @ GHC.Types.Char ww3 ww4 }
                 } in
                 let {
                   _x1 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Text _x
                 } in
                 let {
                   _x2 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Scale
                       Solve.promptSolve28
                       Solve.promptSolve28
                       _x1
                 } in
                 let {
                   _x3 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Translate
                       Solve.promptSolve27
                       Solve.promptSolve26
                       _x2
                 } in
                 \ (ds2 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 case ds2 of wild {
                   [] -> GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture
                   : y ys
                   -> GHC.Types.:
                        @ Graphics.Gloss.Internals.Data.Picture.Picture
                        (Graphics.Gloss.Internals.Data.Picture.Pictures
                           (GHC.Types.:
                              @ Graphics.Gloss.Internals.Data.Picture.Picture
                              _x3
                              (GHC.Types.:
                                 @ Graphics.Gloss.Internals.Data.Picture.Picture
                                 y
                                 (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture))))
                        (ds1 ys) }) -}
89cf189666ae939eff033628b08309aa
  promptSolve26 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 36.0#) -}
5d1010f185c4163d10890f7c68da7a55
  promptSolve27 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 20.0#) -}
5fd045619c1170c13e3b040194055d3b
  promptSolve28 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.1#) -}
6832bf7cbd74277fbeb93d28c173c55e
  promptSolve29 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 16.0#) }) -}
e0155b7a75a4d6b00aeb061d138ec3e6
  promptSolve3 ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect) #)
  {- Arity: 3 -}
9a094bfa5df78f55a9ffa186b5932d31
  promptSolve30 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) -8.0#) }) -}
fb4409b372656e1172b4e1f4a7c2fcb7
  promptSolve31 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 8.0#) -}
023b47d7b0e904c5c5cb1876373b632f
  promptSolve32 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 104.0#) -}
01130c35dddc2cb17142dcddbc487b86
  promptSolve33 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (case Graphics.$wrenderBoard
                        Solve.promptSolve34 of ww { Unit# ww1 ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures ww1 }) -}
b3246654dea1dc6e772d47ac7560020a
  promptSolve34 :: PegBoard.Board
  {- Unfolding: (case PegBoard.$wmakeBoard
                        Solve.promptSolve35 of ww { (#,#) ww1 ww2 ->
                 PegBoard.Board ww1 ww2 }) -}
fdf3a0f17089fb93a8acfb9d92ad27bd
  promptSolve35 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
4bca5b8ce7aa1ff0989f4fb5a6e00fb5
  promptSolve36 :: Solve.Sequence
  {- Unfolding: (Solve.Seq Solve.promptSolve37) -}
ff377c5001ee4dffc6ce8ac05405c6f0
  promptSolve37 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve38) -}
62cc58ae5547fe8a00f0ac40e061b375
  promptSolve38 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptSolve29
                   Solve.promptSolve57
                   Solve.promptSolve39) -}
714a57fa7179f7e63c7eaf77cb85b541
  promptSolve39 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve51
                   Solve.promptSolve40) -}
f1db41227a2bb7b2806666a2728e6572
  promptSolve4 ::
    ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Gloss.Internals.Data.Picture.Picture #)
  {- Arity: 2,
     Unfolding: (\ (x6 :: ([Solve.Sequence], [Solve.Sequence],
                           Solve.CoordCollect))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case x6 of wild { (,,) ds ds1 ds2 ->
                    case ds of wild1 {
                      [] -> Graphics.Gloss.Internals.Data.Picture.Blank
                      : p as
                      -> case p of wild2 {
                           Solve.Seq b -> b
                           Solve.Seqs as1 bs
                           -> GHC.List.head
                                @ Graphics.Gloss.Internals.Data.Picture.Picture
                                as1 } } } #)) -}
6a4c2b53ed707a87516a2460b0c9c260
  promptSolve40 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve42
                   Solve.promptSolve41) -}
c7d40284744d1a862c18df0888f4f31a
  promptSolve41 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve33
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
75a44bc2ed17f27ce7beeed322ff2cd2
  promptSolve42 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve43) -}
cf734d1f77a2c73b069b84ecfdf7c166
  promptSolve43 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve44) -}
f64371719f0565d7ba48153c71b100df
  promptSolve44 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.promptSolve_go
                   Solve.promptSolve48
                   Solve.promptSolve45) -}
f737303ff48e173ea3c621a3a3c412f3
  promptSolve45 :: [GHC.Types.Float]
  {- Unfolding: (GHC.Real.numericEnumFromThenTo
                   @ GHC.Types.Float
                   GHC.Classes.$fOrdFloat
                   GHC.Float.$fFractionalFloat
                   Solve.promptSolve47
                   Solve.promptSolve31
                   Solve.promptSolve46) -}
439cb7e02375bdaa3efc57e105b96de0
  promptSolve46 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 32.0#) -}
b1614f362e63064e08b86749ee0574f6
  promptSolve47 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
ecae95525c154cbf9401673f7310d798
  promptSolve48 :: [GHC.Types.Float]
  {- Unfolding: (GHC.Real.numericEnumFromTo
                   @ GHC.Types.Float
                   GHC.Classes.$fOrdFloat
                   GHC.Float.$fFractionalFloat
                   Solve.promptSolve50
                   Solve.promptSolve49) -}
af846a11bf3da50f9d9a0503708a3c59
  promptSolve49 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 5.0#) -}
b697c56292bcde359a73373e9d92ca5f
  promptSolve5 ::
    ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
  {- Unfolding: ((Solve.promptSolve8, GHC.Types.[] @ Solve.Sequence,
                  Solve.emptyCoordCol)) -}
c12317824f9f270edac128ad658bf956
  promptSolve50 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 1.0#) -}
48b47bdfec225279bbf41d41ca53e05c
  promptSolve51 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Solve.promptSolve47
                   Solve.promptSolve58
                   Solve.promptSolve52) -}
706edf88937edc2d252c8b6bfc8b86e3
  promptSolve52 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve53) -}
540bf8b13bc9a75a147a511437dc95e2
  promptSolve53 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve54) -}
3600efd2182cbe0d1a2590d50d022c80
  promptSolve54 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptSolve57
                   Solve.promptSolve29
                   Solve.promptSolve55) -}
35bcee2600223c4d9d2005d0c4c8ae07
  promptSolve55 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Enum.enumDeltaToIntegerFB
                   @ [Graphics.Gloss.Internals.Data.Picture.Picture]
                   Solve.promptSolve56
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)
                   Solve.promptSolve23
                   Solve.promptSolve22
                   Solve.promptSolve21) -}
a1fa04b9377ae1ba06dd26eb8b1478c4
  promptSolve56 ::
    GHC.Integer.Type.Integer
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2,
     Unfolding: (\ (ds :: GHC.Integer.Type.Integer)
                   (ds1 :: [Graphics.Gloss.Internals.Data.Picture.Picture])[OneShot] ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   (Graphics.Gloss.Internals.Data.Picture.Scale
                      Solve.promptSolve28
                      Solve.promptSolve28
                      (Graphics.Gloss.Internals.Data.Picture.Text
                         (GHC.Show.$fShowInteger_$cshow ds)))
                   ds1) -}
9ff31a650eb2d0061eda962ecb1628f4
  promptSolve57 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 0.0#) }) -}
71937d7e071c87661ba85f4809800d0e
  promptSolve58 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -4.0#) -}
82d7333222ba8fff8d3e059cc7816661
  promptSolve59 :: Graphics.Gloss.Data.Display.Display
  {- Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   Solve.promptSolve63
                   Solve.promptSolve61
                   Solve.promptSolve60) -}
9b4ca78ae69eea56c19c1390dece90ee
  promptSolve6 :: PegBoard.Coord
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (PegBoard.Coord
                   Solve.promptSolve7
                   Solve.promptSolve7) -}
b9076877f8ae9e44c4e2421dd33ac24f
  promptSolve60 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs,
     Unfolding: ((Solve.promptSolve7, Solve.promptSolve7)) -}
0ead4337913785d633720b82457487a8
  promptSolve61 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs,
     Unfolding: ((Solve.promptSolve62, Solve.promptSolve62)) -}
9b5d82aca2a5868707f8413c6d113dea
  promptSolve62 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 600#) -}
a6c82fb5d6b723b41db9ef1581f8826f
  promptSolve63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SolvePrompted"#) -}
dddca17a6130f2212422127c6bf79ca6
  promptSolve7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
d8546e3c32fa14140aa322d3551d8d5a
  promptSolve8 :: [Solve.Sequence]
  {- Unfolding: (GHC.Types.:
                   @ Solve.Sequence
                   Solve.promptSolve36
                   Solve.promptSolve9) -}
6c6709fd0a4f12abdd89679f471994ff
  promptSolve9 :: [Solve.Sequence]
  {- Unfolding: (GHC.Types.:
                   @ Solve.Sequence
                   Solve.promptSolve10
                   (GHC.Types.[] @ Solve.Sequence)) -}
017471430e184176daeb8868317324e9
  promptSolve_go ::
    [GHC.Types.Float]
    -> [GHC.Types.Float]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
instance GHC.Classes.Eq [Solve.Sequence] = Solve.$fEqSequence
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

