
==================== FINAL INTERFACE ====================
2016-11-04 16:56:31.595249 UTC

interface pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:Solve 8001
  interface hash: 191d6c6125427e9a4517e23a0b0e0710
  ABI hash: 142e584bd122979c9020137bb74ae454
  export-list hash: 37f488ad4b3919da239b5a72a04fc9d7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  Solve.promptSolve
module dependencies: Analytics CriticalPoints Graphics
                     Helpers.Lists Helpers.Math PegBoard PegBoardMove PlayGame
                     Symmetries
package dependencies: GLURaw-2.0.0.2@GLURaw-2.0.0.2-FbcPHzTa7vLEnCQ0kkJ8B4
                      GLUT-2.7.0.10@GLUT-2.7.0.10-A3NqGto8XAVI0ysflkZZW9
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-HHHIolNI8Pm5H3OGkgSUrO
                      OpenGL-3.0.1.0@OpenGL-3.0.1.0-2SQfSEFR02AIolFfoam9tJ
                      OpenGLRaw-3.2.2.0@OpenGLRaw-3.2.2.0-KWU3ruQNCGR7AsVafRovL
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-KF4xHl5RTVIp6NQI8dI2I
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-21JkkJmr6h52cZo1o8cauA ghc-prim-0.5.0.0
                      gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB
                      gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr
                      half-0.2.2.3@half-0.2.2.3-BFHx0LiJemg6baNXrjGThF
                      integer-gmp-1.0.0.1 stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
import  -/  base-4.9.0.0:Data.Char eb33dc25ecb52d018a0ca26590e2b50b
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss d5b982018b0c758f00994fce74453c04
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Color b525c333674d23cc8320332d7db6f0cc
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Display 23041d1e33431329e29c0f20d2656204
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Picture e95e53d5f841f673cdd330becc7218b6
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Interface.Pure.Game 2dd340a64cf43818f7fb9d5ecccf65d2
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Backend.Types 6dedaa7d5ac2b54ee5c9eafd16b95468
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Internals.Interface.Event 72f0eabd47b5e04e08135dc87ef0ee7a
import  -/  gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture 1b8e2c645c53408a68ac59ac66e45f2b
import  -/  Analytics 915c46e4e13ae52faf1cdcea21251029
  exports: f7e9d11b8ff150a18249c1b08395b5a8
  endWith 4bd0c3b8f21ef251c9d11570450595ee
import  -/  Graphics 0bde4143f519ae9bcb6cc3f2ae806160
  exports: 3c1308225ea2e14f0de2a6b7d3a6490d
  offset fb1733ba8a7693fe6d9f7d70ecaeca8c
  renderBoard 8ed355beea3e14b7e862959664c6aa97
import  -/  PegBoard 5e94c5617cf4c05508153d96394b5949
  exports: d9e5ef2267766e7ae3b457c51282f54d
  Board dd84e3e13f591df253c023fdeb6d0fac
  Board 88c3b97cf1f38c14492f474b5ab8ce85
  Coord da8073910dff9584368414866999997b
  Coord e848d92561720a4b1c6dee3cfa88409d
  makeBoard bc525de14674e773a0394f15339e38fe
  removePeg ea1cb54766fa6f4c220bfea2979e5c89
import  -/  PlayGame 33dcc890daf23cb58c28e0429f285f74
  exports: db98f7a3543cf5dfbe75863e31383cd6
  collectLog d50cb14233bc66d28cd8bfc3ee05c610
  playGameLog 57bb2db0471df9649c8412185aa8700d
02d633715151042965876b3195ad8c89
  $fEqSequence :: GHC.Classes.Eq Solve.Sequence
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Solve.Sequence Solve.$fEqSequence_$c== Solve.$fEqSequence_$c/= -}
02d633715151042965876b3195ad8c89
  $fEqSequence_$c/= ::
    Solve.Sequence -> Solve.Sequence -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Solve.Sequence) (b :: Solve.Sequence) ->
                 case Solve.$fEqSequence_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
02d633715151042965876b3195ad8c89
  $fEqSequence_$c== ::
    Solve.Sequence -> Solve.Sequence -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Solve.Sequence) (ds1 :: Solve.Sequence) ->
                 case ds of wild {
                   Solve.Seq a1
                   -> case ds1 of wild1 {
                        Solve.Seq b1
                        -> Graphics.Gloss.Internals.Data.Picture.$fEqPicture_$c== a1 b1
                        Solve.Seqs ipv ipv1 -> GHC.Types.False }
                   Solve.Seqs a1 a2
                   -> case ds1 of wild1 {
                        Solve.Seq ipv -> GHC.Types.False
                        Solve.Seqs b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  Graphics.Gloss.Internals.Data.Picture.$fEqPicture
                                  a1
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  Graphics.Gloss.Internals.Data.Picture.$fEqPicture
                                  a2
                                  b2 } } }) -}
6304ab382e0d433401e266af2fc6343b
  $tc'Seq :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1195181283107584671##
                   5930153782961580035##
                   Solve.$trModule
                   Solve.$tc'Seq1) -}
76dbb0ed23172f3186d8529c48080159
  $tc'Seq1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Seq"#) -}
b676b56baaed1f612528618e635d1b3d
  $tc'Seqs :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4599407225449500119##
                   3361552919252607126##
                   Solve.$trModule
                   Solve.$tc'Seqs1) -}
9256dd0a321b89191fb35b9b8c71f806
  $tc'Seqs1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Seqs"#) -}
8f92de47fe94b32934b19feed5fd7b36
  $tcSequence :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5717712950509096092##
                   18168109720081050818##
                   Solve.$trModule
                   Solve.$tcSequence1) -}
55c01a2d3db4f6cddb8d3c16c80698eb
  $tcSequence1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Sequence"#) -}
ccdc0654fa27a18daaf9604a3871d916
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Solve.$trModule2 Solve.$trModule1) -}
a8fb7c5b426d4d381899bce7bc3b9e69
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Solve"#) -}
2d97266ee88020a909bdd4a041ad7883
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2"#) -}
1f47c81efe610ca8197d5784ffb0f60f
  $wxs ::
    GHC.Prim.Int# -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0] -}
1c5a490cd84501b300d4609ad45c38d1
  type CoordCollect =
    (PegBoard.Coord, GHC.Base.Maybe GHC.Types.Int, GHC.Types.Bool)
7832f961e9357915c88bdfa63a568635
  type Prompts =
    ([Solve.Sequence], [Solve.Sequence], Solve.CoordCollect)
02d633715151042965876b3195ad8c89
  data Sequence
    = Seq Graphics.Gloss.Internals.Data.Picture.Picture
    | Seqs [Graphics.Gloss.Internals.Data.Picture.Picture]
           [Graphics.Gloss.Internals.Data.Picture.Picture]
ab405fdbd68577004673622dc0e72550
  emptyCoordCol :: Solve.CoordCollect
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Solve.promptSolve5, GHC.Base.Nothing @ GHC.Types.Int,
                  GHC.Types.False)) -}
2a7bb755c98c866fcad0a4bcd51834f8
  promptBase :: Solve.Prompts
  {- Strictness: m,
     Unfolding: ((Solve.promptSolve7, GHC.Types.[] @ Solve.Sequence,
                  Solve.emptyCoordCol)) -}
1b201d6881099dfc139f372e9b9c836d
  promptSolve :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Solve.promptSolve1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
df49c0f700c1d3bae71ab2e93f832a87
  promptSolve1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Graphics.Gloss.Internals.Interface.Game.playWithBackendIO1
                        @ Solve.Prompts
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                        Solve.promptSolve58
                        Graphics.Gloss.Data.Color.black
                        Solve.promptSolve6
                        Solve.promptBase
                        Solve.promptSolve4
                          `cast`
                        (<Solve.Prompts>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Solve.promptSolve3
                          `cast`
                        (<Graphics.Gloss.Internals.Interface.Event.Event>_R
                         ->_R <Solve.Prompts>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Solve.Prompts>_R))
                        Solve.promptSolve2
                          `cast`
                        (<GHC.Types.Float>_R
                         ->_R <Solve.Prompts>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Solve.Prompts>_R))
                        GHC.Types.True
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
399efae1b05b4985c5bab24bda8e3161
  promptSolve10 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m14,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve11) -}
2d86b7d59c307cf0a8ce0618e0b0674f
  promptSolve11 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve32
                   Solve.promptSolve12) -}
f7f1dfcaec8bdb8b1e7f6895eff5c0b6
  promptSolve12 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve13
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
8713762412046d3e6a2b6a277eb650fa
  promptSolve13 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve14) -}
5a7da68cc1e6b2f48ca73353f40ab3f8
  promptSolve14 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m11,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Solve.promptSolve31
                   Solve.promptSolve30
                   Solve.promptSolve15) -}
4bbc0d2618e3e5ebe202f66b20e2b574
  promptSolve15 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m14,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve16) -}
b768c7f50b4d255aa1e92f63acc68c10
  promptSolve16 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptSolve29
                   Solve.promptSolve28
                   Solve.promptSolve17) -}
115db3a52819799d69386ee861631f67
  promptSolve17 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.promptSolve19 Solve.promptSolve18) -}
6890db7255c691dc501bdb0509df332b
  promptSolve18 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.$wxs 5#) -}
158f5786613e9aa7762fc79ceb9f26ea
  promptSolve19 ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Enum.enumDeltaToIntegerFB
                   @ ([Graphics.Gloss.Internals.Data.Picture.Picture]
                      -> [Graphics.Gloss.Internals.Data.Picture.Picture])
                   Solve.promptSolve24
                   Solve.promptSolve23
                   Solve.promptSolve22
                   Solve.promptSolve21
                   Solve.promptSolve20) -}
bbd19e19869e6fefa67c97908570ac14
  promptSolve2 ::
    GHC.Types.Float
    -> Solve.Prompts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Solve.Prompts #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (time :: GHC.Types.Float)
                   (world1 :: Solve.Prompts)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, world1 #)) -}
91c7a5678e94a32fd6a5c9c70ae4e179
  promptSolve20 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
2023d50dea2c156dedeb2a63dbb4d2b6
  promptSolve21 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (-1) -}
b9ee750dcc57bb237aa9669e7fd6c873
  promptSolve22 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
c0bfd5c55cc844214b3c77be677576e1
  promptSolve23 ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (ds :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture) -}
cbd51359ff76e10e6a07c3bcd905fb41
  promptSolve24 ::
    GHC.Integer.Type.Integer
    -> ([Graphics.Gloss.Internals.Data.Picture.Picture]
        -> [Graphics.Gloss.Internals.Data.Picture.Picture])
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2,
     Unfolding: (\ (ds :: GHC.Integer.Type.Integer)
                   (ds1 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
                           -> [Graphics.Gloss.Internals.Data.Picture.Picture])[OneShot] ->
                 let {
                   _x :: GHC.Base.String
                   = case GHC.Show.$w$cshowsPrec3
                            0#
                            ds
                            (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                     GHC.Types.: @ GHC.Types.Char ww3 ww4 }
                 } in
                 let {
                   _x1 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Text _x
                 } in
                 let {
                   _x2 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Scale
                       Solve.promptSolve27
                       Solve.promptSolve27
                       _x1
                 } in
                 let {
                   _x3 :: Graphics.Gloss.Internals.Data.Picture.Picture
                   = Graphics.Gloss.Internals.Data.Picture.Translate
                       Solve.promptSolve26
                       Solve.promptSolve25
                       _x2
                 } in
                 \ (ds2 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 case ds2 of wild {
                   [] -> GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture
                   : y ys
                   -> GHC.Types.:
                        @ Graphics.Gloss.Internals.Data.Picture.Picture
                        (Graphics.Gloss.Internals.Data.Picture.Pictures
                           (GHC.Types.:
                              @ Graphics.Gloss.Internals.Data.Picture.Picture
                              _x3
                              (GHC.Types.:
                                 @ Graphics.Gloss.Internals.Data.Picture.Picture
                                 y
                                 (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture))))
                        (ds1 ys) }) -}
e0a95926821b7775972b9279b1a30d00
  promptSolve25 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 36.0#) -}
d1ff92e4f72dde81e815c11678027a83
  promptSolve26 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 20.0#) -}
679a5560e12da001b48074288ba67c3c
  promptSolve27 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.1#) -}
86f85b06b9eaa069025689ff2d02afd6
  promptSolve28 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 16.0#) }) -}
9e81933280b46c4414613f63c021feb7
  promptSolve29 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) -8.0#) }) -}
0f0af79435d0d04466370938ead2d1c8
  promptSolve3 ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> Solve.Prompts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Solve.Prompts #)
  {- Arity: 3 -}
7d632dd5316fee184083c82505e6cc4e
  promptSolve30 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 8.0#) -}
ac17bfe4fde25e4b64f5914be811a123
  promptSolve31 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 104.0#) -}
ceda98cf55d0a0bf697e1ed630ae6c47
  promptSolve32 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (case Graphics.$wrenderBoard
                        Solve.promptSolve33 of ww { Unit# ww1 ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures ww1 }) -}
7cb9f89da84749ddd0f696ca542ac466
  promptSolve33 :: PegBoard.Board
  {- Unfolding: (case PegBoard.$wmakeBoard
                        Solve.promptSolve34 of ww { (#,#) ww1 ww2 ->
                 PegBoard.Board ww1 ww2 }) -}
f51bceb7742e31ec828dfdca3e60383a
  promptSolve34 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
b2fe5c230eb80a49a19b7322d8bc8a8d
  promptSolve35 :: Solve.Sequence
  {- Strictness: m1, Unfolding: (Solve.Seq Solve.promptSolve36) -}
6a99e8683a9ea371703af2b4241defb0
  promptSolve36 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m14,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve37) -}
8b903d76e94718c69f9f046b6bb1f349
  promptSolve37 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptSolve28
                   Solve.promptSolve56
                   Solve.promptSolve38) -}
939ff03fe7b3d24d378eaa0892a59d9a
  promptSolve38 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve50
                   Solve.promptSolve39) -}
d107a8f1ded0f964f386271c7e83a595
  promptSolve39 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve41
                   Solve.promptSolve40) -}
2dfcd9071312c2e6b15364fac2bbe404
  promptSolve4 ::
    Solve.Prompts
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Gloss.Internals.Data.Picture.Picture #)
  {- Arity: 2,
     Unfolding: (\ (x6 :: Solve.Prompts)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case x6 of wild { (,,) ds ds1 ds2 ->
                    case ds of wild1 {
                      [] -> Graphics.Gloss.Internals.Data.Picture.Blank
                      : p as
                      -> case p of wild2 {
                           Solve.Seq b -> b
                           Solve.Seqs as1 bs
                           -> GHC.List.head
                                @ Graphics.Gloss.Internals.Data.Picture.Picture
                                as1 } } } #)) -}
bfbd579bd200dffd79412f5303480c05
  promptSolve40 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Solve.promptSolve32
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
41a2c226801de33f3e64567be80aabe6
  promptSolve41 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve42) -}
86ca21402b486dbc08d6c65d52bd3e6d
  promptSolve42 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve43) -}
d4918059e909f7fb0147f6cd979e5b19
  promptSolve43 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Solve.promptSolve_go
                   Solve.promptSolve47
                   Solve.promptSolve44) -}
8df634b91151f035ce801ca813ed5259
  promptSolve44 :: [GHC.Types.Float]
  {- Unfolding: (GHC.Real.numericEnumFromThenTo
                   @ GHC.Types.Float
                   GHC.Classes.$fOrdFloat
                   GHC.Float.$fFractionalFloat
                   Solve.promptSolve46
                   Solve.promptSolve30
                   Solve.promptSolve45) -}
8ef0b9e9949ad7bb7bcdc6c1e43eee79
  promptSolve45 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 32.0#) -}
fef7debcd68f0a288f998d7f69ece4ce
  promptSolve46 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
a12650abe23ba25b15d8b7e3a6c128a2
  promptSolve47 :: [GHC.Types.Float]
  {- Unfolding: (GHC.Real.numericEnumFromTo
                   @ GHC.Types.Float
                   GHC.Classes.$fOrdFloat
                   GHC.Float.$fFractionalFloat
                   Solve.promptSolve49
                   Solve.promptSolve48) -}
445da7f58dc2e7790d343b9e0548f638
  promptSolve48 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 5.0#) -}
e515fd2bb16b7cd260a47e3e11e3c10d
  promptSolve49 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 1.0#) -}
0eac4d3a0e6d24c0b73dfeec8164786f
  promptSolve5 :: PegBoard.Coord
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (PegBoard.Coord
                   Solve.promptSolve6
                   Solve.promptSolve6) -}
43241f9d7312956451472367a2f91d05
  promptSolve50 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Solve.promptSolve46
                   Solve.promptSolve57
                   Solve.promptSolve51) -}
b40f582f374cbf7badd63617b7444313
  promptSolve51 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.white
                   Solve.promptSolve52) -}
7906e913349b2d6c66f4a28fc815f6b6
  promptSolve52 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Solve.promptSolve53) -}
4e138bc133a69b018a1a1f6e4434a4b9
  promptSolve53 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (Graphics.renderBoard_$soffsetF
                   Solve.promptSolve56
                   Solve.promptSolve28
                   Solve.promptSolve54) -}
f4092fdcf41dea29002b0eb2688ea345
  promptSolve54 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Unfolding: (GHC.Enum.enumDeltaToIntegerFB
                   @ [Graphics.Gloss.Internals.Data.Picture.Picture]
                   Solve.promptSolve55
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)
                   Solve.promptSolve22
                   Solve.promptSolve21
                   Solve.promptSolve20) -}
0753693533899b9b309eeecb037a6253
  promptSolve55 ::
    GHC.Integer.Type.Integer
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2,
     Unfolding: (\ (ds :: GHC.Integer.Type.Integer)
                   (ds1 :: [Graphics.Gloss.Internals.Data.Picture.Picture])[OneShot] ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   (Graphics.Gloss.Internals.Data.Picture.Scale
                      Solve.promptSolve27
                      Solve.promptSolve27
                      (Graphics.Gloss.Internals.Data.Picture.Text
                         (GHC.Show.$fShowInteger_$cshow ds)))
                   ds1) -}
36b719cdcaef2e5d5bdd939488d77313
  promptSolve56 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 0.0#) }) -}
7fe16bf92f82753d014061b1caccb80f
  promptSolve57 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -4.0#) -}
af3e16bce4d3aa9af5c18f07d9ae82bc
  promptSolve58 :: Graphics.Gloss.Data.Display.Display
  {- Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   Solve.promptSolve62
                   Solve.promptSolve60
                   Solve.promptSolve59) -}
07a2e67937afc9cff33d4203414957ca
  promptSolve59 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs,
     Unfolding: ((Solve.promptSolve6, Solve.promptSolve6)) -}
e987f004ab21e465c67a3ecded71e50d
  promptSolve6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
a4d2aa02ce5e7b8d078f347d29bb7249
  promptSolve60 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs,
     Unfolding: ((Solve.promptSolve61, Solve.promptSolve61)) -}
173fd655e0e3be8b6bd5a3f59c293578
  promptSolve61 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 600#) -}
b89386da8f297e1933e6a3a60a0a8249
  promptSolve62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SolvePrompted"#) -}
b89f9b6ed5608453603b7639571bb590
  promptSolve7 :: [Solve.Sequence]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Solve.Sequence
                   Solve.promptSolve35
                   Solve.promptSolve8) -}
2324bee3a45e72b38a4c4c03e4ffc769
  promptSolve8 :: [Solve.Sequence]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Solve.Sequence
                   Solve.promptSolve9
                   (GHC.Types.[] @ Solve.Sequence)) -}
987822c6e55ed6cac2ed092dafbc58d5
  promptSolve9 :: Solve.Sequence
  {- Strictness: m1, Unfolding: (Solve.Seq Solve.promptSolve10) -}
017471430e184176daeb8868317324e9
  promptSolve_go ::
    [GHC.Types.Float]
    -> [GHC.Types.Float]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
instance GHC.Classes.Eq [Solve.Sequence] = Solve.$fEqSequence
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

