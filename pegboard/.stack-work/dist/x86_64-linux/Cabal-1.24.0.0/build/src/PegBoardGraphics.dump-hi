
==================== FINAL INTERFACE ====================
2016-10-03 20:48:29.408573 UTC

interface pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2:PegBoardGraphics 8001
  interface hash: 6713db11176a6ab53f7c73e3ed63ad23
  ABI hash: 516903083d0248f7157640d365cea455
  export-list hash: 88e4021c65fc95cac3726aa9ee587feb
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  PegBoardGraphics.displayBoard
  PegBoardGraphics.displayBoards
  PegBoardGraphics.displayBoardsSquare
  PegBoardGraphics.renderBoard
  PegBoardGraphics.renderBoards
  PegBoardGraphics.renderBoardsSquare
module dependencies: Helpers.Lists Helpers.Math PegBoard
                     PegBoardCriticalPoints
package dependencies: GLURaw-2.0.0.2@GLURaw-2.0.0.2-FbcPHzTa7vLEnCQ0kkJ8B4
                      GLUT-2.7.0.10@GLUT-2.7.0.10-A3NqGto8XAVI0ysflkZZW9
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-HHHIolNI8Pm5H3OGkgSUrO
                      OpenGL-3.0.1.0@OpenGL-3.0.1.0-2SQfSEFR02AIolFfoam9tJ
                      OpenGLRaw-3.2.2.0@OpenGLRaw-3.2.2.0-KWU3ruQNCGR7AsVafRovL
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-KF4xHl5RTVIp6NQI8dI2I
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-21JkkJmr6h52cZo1o8cauA ghc-prim-0.5.0.0
                      gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB
                      gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr
                      half-0.2.2.3@half-0.2.2.3-BFHx0LiJemg6baNXrjGThF
                      integer-gmp-1.0.0.1 stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Tuple acb0ed10307ed88df6c81b8589f4de16
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Float 469226b1bc53433e95d0167dec5d0312
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss d5b982018b0c758f00994fce74453c04
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Color b525c333674d23cc8320332d7db6f0cc
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Display 23041d1e33431329e29c0f20d2656204
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Data.Picture e95e53d5f841f673cdd330becc7218b6
import  -/  gloss-1.10.2.3@gloss-1.10.2.3-1DblAUc5fHk3Q1eprjU9FB:Graphics.Gloss.Interface.Pure.Display 4a533cefe8cfd70824e77b2888fc8dc2
import  -/  gloss-rendering-1.10.3.3@gloss-rendering-1.10.3.3-5PiCamqHfbt8xiRs4ymvLr:Graphics.Gloss.Internals.Data.Picture 1b8e2c645c53408a68ac59ac66e45f2b
import  -/  Helpers.Lists 9c52ca015466111e8d572aeb56cfef86
  exports: 975c27250cc63b29bcdfa4d36e613251
  subDivide 393576c801ae6ff29ff6229f90fd19c8
import  -/  PegBoard 2feff203ebfeacb2de886c6d7cd8d789
  exports: 1bff303d413b992e037c4116e726befe
  Board a9cbb8b5c5bd98a5c5fb42e9af0a1445
import  -/  PegBoardCriticalPoints c2ec82b82f5d6019955109f7e071e60f
  exports: 7a43dc8b5c56a03c48b8798a9fabcd09
  rows' f1f75ad2ae5df3af97fd3e737488e5a5
bc0bc8a4c8b5743ad1fb4b3d9534e3d0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   PegBoardGraphics.$trModule2
                   PegBoardGraphics.$trModule1) -}
868f569e4d5e4aeb215cadd21ab6f428
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PegBoardGraphics"#) -}
bcb2e7e1b797d846e597756b0e7afff9
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "pegboard-0.1.0.0-FjeDzkb0etYsOVuQKSaT2"#) -}
b1dbb05c8ae0d7c0ee3495fdd1f85b7f
  $wrenderBoard ::
    PegBoard.Board
    -> (# [Graphics.Gloss.Internals.Data.Picture.Picture] #)
  {- Arity: 1, Strictness: <L,1*U(U,1*U)>, Inline: [0],
     Unfolding: (\ (w :: PegBoard.Board) ->
                 (# case w of ww { PegBoard.Board ww1 ww2 ->
                    PegBoardGraphics.renderBoard_$soffsetF
                      PegBoardGraphics.renderBoard10
                      PegBoardGraphics.renderBoard8
                      (GHC.List.reverse1
                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                         (GHC.Base.map
                            @ [(PegBoard.Coord, GHC.Types.Bool)]
                            @ Graphics.Gloss.Internals.Data.Picture.Picture
                            PegBoardGraphics.renderBoard1
                            (PegBoardCriticalPoints.$wrows' ww1 ww2))
                         (GHC.Types.[]
                            @ Graphics.Gloss.Internals.Data.Picture.Picture)) } #)) -}
2fb2a0ada7130ad859848ca71d63b86c
  displayBoard :: PegBoard.Board -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                PegBoardGraphics.displayBoard1
                  `cast`
                (<PegBoard.Board>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b5c60e5d394d46dcd2fb9c1c429230b7
  displayBoard1 ::
    PegBoard.Board
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (b :: PegBoard.Board)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Graphics.Gloss.Internals.Interface.Display.displayWithBackend1
                   @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                   PegBoardGraphics.displayBoard2
                   Graphics.Gloss.Data.Color.black
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, PegBoardGraphics.renderBoard b #))
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                   Graphics.Gloss.Interface.Pure.Display.display2
                     `cast`
                   (<Graphics.Gloss.Data.Controller.Controller>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   eta) -}
941531d3b6ff364881c9c620d66ce360
  displayBoard2 :: Graphics.Gloss.Data.Display.Display
  {- Strictness: m1,
     Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   PegBoardGraphics.displayBoard7
                   PegBoardGraphics.displayBoard5
                   PegBoardGraphics.displayBoard3) -}
c4cbc3b36d06a92e651d664c2900dac7
  displayBoard3 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((PegBoardGraphics.displayBoard4,
                  PegBoardGraphics.displayBoard4)) -}
3e69c90b9737826755a9e7bdd1daae79
  displayBoard4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
b06ca52ac180d7815a4ac46fe6bd439e
  displayBoard5 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((PegBoardGraphics.displayBoard6,
                  PegBoardGraphics.displayBoard6)) -}
70eeb1845af149d4dbceb949914c3cec
  displayBoard6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 600#) -}
32d698fb4a59ab3198e9231b38999616
  displayBoard7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PegBoard"#) -}
21419b574cbc9f938041cbd9f68a2737
  displayBoards :: [PegBoard.Board] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                PegBoardGraphics.displayBoards1
                  `cast`
                (<[PegBoard.Board]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
afa4db898423774bb91879a956af0b40
  displayBoards1 ::
    [PegBoard.Board]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (bs :: [PegBoard.Board])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Graphics.Gloss.Internals.Interface.Display.displayWithBackend1
                   @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                   PegBoardGraphics.displayBoard2
                   Graphics.Gloss.Data.Color.black
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, PegBoardGraphics.renderBoards bs #))
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                   Graphics.Gloss.Interface.Pure.Display.display2
                     `cast`
                   (<Graphics.Gloss.Data.Controller.Controller>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   eta) -}
f24490f8beba807053d0cbae12b57acb
  displayBoardsSquare :: [PegBoard.Board] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                PegBoardGraphics.displayBoardsSquare1
                  `cast`
                (<[PegBoard.Board]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
98b5703af848a9a732ebbcb687440923
  displayBoardsSquare1 ::
    [PegBoard.Board]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (bs :: [PegBoard.Board])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Graphics.Gloss.Internals.Interface.Display.displayWithBackend1
                   @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                   Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                   PegBoardGraphics.displayBoard2
                   Graphics.Gloss.Data.Color.black
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, PegBoardGraphics.renderBoardsSquare bs #))
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                   Graphics.Gloss.Interface.Pure.Display.display2
                     `cast`
                   (<Graphics.Gloss.Data.Controller.Controller>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   eta) -}
b1dad1afd13d00b14f5d148cddb348f0
  renderBoard ::
    PegBoard.Board -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <L,1*U(U,1*U)>m14, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: PegBoard.Board) ->
                 case PegBoardGraphics.$wrenderBoard w of ww { Unit# ww1 ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures ww1 }) -}
cecf456ace57821990f90989a312433a
  renderBoard1 ::
    [(PegBoard.Coord, GHC.Types.Bool)]
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <L,1*U>m14, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(PegBoard.Coord, GHC.Types.Bool)]) ->
                 Graphics.Gloss.Internals.Data.Picture.Pictures
                   (PegBoardGraphics.renderBoard_$soffsetF
                      PegBoardGraphics.renderBoard8
                      PegBoardGraphics.renderBoard7
                      (GHC.Base.map
                         @ (PegBoard.Coord, GHC.Types.Bool)
                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                         PegBoardGraphics.renderBoard2
                         w))) -}
f4161df5aacd00a6c552e1e88a28b17e
  renderBoard10 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 8.0#) }) -}
e592dac46d47a94bf20f8b2f1e32dc75
  renderBoard2 ::
    (PegBoard.Coord, GHC.Types.Bool)
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: (PegBoard.Coord, GHC.Types.Bool)) ->
                 case x of wild { (,) ds1 y ->
                 case y of wild1 {
                   GHC.Types.False -> PegBoardGraphics.renderBoard6
                   GHC.Types.True -> PegBoardGraphics.renderBoard3 } }) -}
fe4eb65ff20af5b136e79549d3ab52c0
  renderBoard3 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.green
                   PegBoardGraphics.renderBoard4) -}
62e513835cbfa878084334c58bd713d5
  renderBoard4 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.ThickCircle
                   PegBoardGraphics.renderBoard5
                   PegBoardGraphics.renderBoard_r) -}
38759afaf605706236e9d409ecb9eae5
  renderBoard5 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 4.0#) -}
42526a3ae3100693b2efd2f94089bd1a
  renderBoard6 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.red
                   PegBoardGraphics.renderBoard4) -}
293ed06e3754a7cc548ad44b0070bc48
  renderBoard7 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 0.0#) }) -}
572e11c00956c1a0dcdf621a6d22ded6
  renderBoard8 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.doubleFromInteger eta of wild { DEFAULT ->
                 GHC.Types.F#
                   (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild) 16.0#) }) -}
e6ca92fb756dfde3267316f81bc62dbe
  renderBoard9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
7e5c4ba3d477faf0852a98c35401861c
  renderBoard_$soffsetF ::
    (GHC.Integer.Type.Integer -> GHC.Types.Float)
    -> (GHC.Integer.Type.Integer -> GHC.Types.Float)
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 3, Strictness: <L,C(U)><L,C(U)><S,1*U>,
     Unfolding: (\ (eta :: GHC.Integer.Type.Integer -> GHC.Types.Float)
                   (eta1 :: GHC.Integer.Type.Integer -> GHC.Types.Float)
                   (eta2 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                 PegBoardGraphics.renderBoard_go
                   eta2
                   (letrec {
                      go :: GHC.Integer.Type.Integer
                            -> [GHC.Types.Float] -> [(GHC.Types.Float, GHC.Types.Float)]
                        {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                      = \ (x :: GHC.Integer.Type.Integer) (eta3 :: [GHC.Types.Float]) ->
                        case x of x1 { DEFAULT ->
                        case eta3 of wild {
                          [] -> GHC.Types.[] @ (GHC.Types.Float, GHC.Types.Float)
                          : y ys
                          -> GHC.Types.:
                               @ (GHC.Types.Float, GHC.Types.Float)
                               (eta x1, y)
                               (go
                                  (GHC.Integer.Type.plusInteger x1 PegBoardGraphics.renderBoard9)
                                  ys) } }
                    } in
                    letrec {
                      go1 :: GHC.Integer.Type.Integer -> [GHC.Types.Float]
                        {- Arity: 1, Strictness: <S,1*U> -}
                      = \ (x :: GHC.Integer.Type.Integer) ->
                        case x of x1 { DEFAULT ->
                        GHC.Types.:
                          @ GHC.Types.Float
                          (eta1 x1)
                          (go1
                             (GHC.Integer.Type.plusInteger x1 PegBoardGraphics.renderBoard9)) }
                    } in
                    go
                      PegBoardGraphics.renderBoard9
                      (go1 PegBoardGraphics.renderBoard9))) -}
5f828ab546d9493cfab7fcd89c3c83fa
  renderBoard_go ::
    [Graphics.Gloss.Internals.Data.Picture.Picture]
    -> [(GHC.Types.Float, GHC.Types.Float)]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
7fcd7661ffc741f9c943467c684924bb
  renderBoard_r :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 8.0#) -}
7fcb51fab6e93d23528159fb4dc07652
  renderBoards ::
    [PegBoard.Board] -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [PegBoard.Board]) ->
                 case ds of wild {
                   [] -> Graphics.Gloss.Internals.Data.Picture.Blank
                   : ipv ipv1
                   -> Graphics.Gloss.Internals.Data.Picture.Pictures
                        (let {
                           lvl :: GHC.Types.Float
                           = case GHC.List.$wlenAcc
                                    @ [(PegBoard.Coord, GHC.Types.Bool)]
                                    (PegBoardCriticalPoints.rows' ipv)
                                    0# of ww2 { DEFAULT ->
                             GHC.Types.F# (GHC.Prim.plusFloat# (GHC.Prim.int2Float# ww2) 1.0#) }
                         } in
                         PegBoardGraphics.renderBoard_$soffsetF
                           PegBoardGraphics.renderBoards2
                           (\ (n :: GHC.Integer.Type.Integer) ->
                            case GHC.Integer.Type.doubleFromInteger
                                   (GHC.Integer.Type.timesInteger
                                      PegBoardGraphics.renderBoards1
                                      n) of wild1 { DEFAULT ->
                            case lvl of wild2 { GHC.Types.F# y ->
                            GHC.Types.F#
                              (GHC.Prim.timesFloat# (GHC.Prim.double2Float# wild1) y) } })
                           (GHC.List.reverse1
                              @ Graphics.Gloss.Internals.Data.Picture.Picture
                              (GHC.Base.map
                                 @ PegBoard.Board
                                 @ Graphics.Gloss.Internals.Data.Picture.Picture
                                 PegBoardGraphics.renderBoard
                                 wild)
                              (GHC.Types.[]
                                 @ Graphics.Gloss.Internals.Data.Picture.Picture))) }) -}
2f0776a0eae06abe302e99476dc07ceb
  renderBoards1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (16) -}
eff1397a4dbe45dd854695a8c15ddacc
  renderBoards2 :: GHC.Integer.Type.Integer -> GHC.Types.Float
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: GHC.Integer.Type.Integer) ->
                 PegBoardGraphics.renderBoards3) -}
47300049448193f3b8f69923ba4e58a3
  renderBoards3 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
ac7af96f1eea96a918e556e4cc8b6fec
  renderBoardsSquare ::
    [PegBoard.Board] -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [PegBoard.Board]) ->
                 case ds of wild {
                   [] -> Graphics.Gloss.Internals.Data.Picture.Blank
                   : ipv ipv1
                   -> Graphics.Gloss.Internals.Data.Picture.Pictures
                        (case GHC.List.$wlenAcc
                                @ PegBoard.Board
                                wild
                                0# of ww2 { DEFAULT ->
                         let {
                           x :: GHC.Prim.Double#
                           = GHC.Prim.sqrtDouble# (GHC.Prim.int2Double# ww2)
                         } in
                         let {
                           n :: GHC.Prim.Int# = GHC.Prim.double2Int# x
                         } in
                         let {
                           lvl :: GHC.Types.Float
                           = case GHC.List.$wlenAcc
                                    @ [(PegBoard.Coord, GHC.Types.Bool)]
                                    (PegBoardCriticalPoints.rows' ipv)
                                    0# of ww1 { DEFAULT ->
                             GHC.Types.F# (GHC.Prim.plusFloat# (GHC.Prim.int2Float# ww1) 1.0#) }
                         } in
                         let {
                           g :: GHC.Integer.Type.Integer -> GHC.Types.Float
                             {- Arity: 1, Strictness: <S,1*U>m,
                                Unfolding: InlineRule (1, True, False)
                                           (\ (n1 :: GHC.Integer.Type.Integer) ->
                                            case GHC.Integer.Type.doubleFromInteger
                                                   n1 of wild1 { DEFAULT ->
                                            case lvl of wild2 { GHC.Types.F# y ->
                                            GHC.Types.F#
                                              (GHC.Prim.timesFloat#
                                                 (GHC.Prim.timesFloat#
                                                    16.0#
                                                    (GHC.Prim.double2Float# wild1))
                                                 y) } }) -}
                           = \ (n1 :: GHC.Integer.Type.Integer) ->
                             case GHC.Integer.Type.doubleFromInteger n1 of wild1 { DEFAULT ->
                             case lvl of wild2 { GHC.Types.F# y ->
                             GHC.Types.F#
                               (GHC.Prim.timesFloat#
                                  (GHC.Prim.timesFloat# 16.0# (GHC.Prim.double2Float# wild1))
                                  y) } }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<## (GHC.Prim.int2Double# n) x) of wild1 {
                           GHC.Types.False
                           -> PegBoardGraphics.renderBoard_$soffsetF
                                PegBoardGraphics.renderBoards2
                                g
                                (GHC.List.reverse1
                                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                                   (GHC.Base.map
                                      @ [Graphics.Gloss.Internals.Data.Picture.Picture]
                                      @ Graphics.Gloss.Internals.Data.Picture.Picture
                                      (\ (x1 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                                       Graphics.Gloss.Internals.Data.Picture.Pictures
                                         (PegBoardGraphics.renderBoard_$soffsetF
                                            g
                                            PegBoardGraphics.renderBoards2
                                            x1))
                                      (Helpers.Lists.$wsubDivide
                                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                                         n
                                         (GHC.Base.map
                                            @ PegBoard.Board
                                            @ Graphics.Gloss.Internals.Data.Picture.Picture
                                            PegBoardGraphics.renderBoard
                                            wild)))
                                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture))
                           GHC.Types.True
                           -> PegBoardGraphics.renderBoard_$soffsetF
                                PegBoardGraphics.renderBoards2
                                g
                                (GHC.List.reverse1
                                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                                   (GHC.Base.map
                                      @ [Graphics.Gloss.Internals.Data.Picture.Picture]
                                      @ Graphics.Gloss.Internals.Data.Picture.Picture
                                      (\ (x1 :: [Graphics.Gloss.Internals.Data.Picture.Picture]) ->
                                       Graphics.Gloss.Internals.Data.Picture.Pictures
                                         (PegBoardGraphics.renderBoard_$soffsetF
                                            g
                                            PegBoardGraphics.renderBoards2
                                            x1))
                                      (Helpers.Lists.$wsubDivide
                                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                                         (GHC.Prim.+# n 1#)
                                         (GHC.Base.map
                                            @ PegBoard.Board
                                            @ Graphics.Gloss.Internals.Data.Picture.Picture
                                            PegBoardGraphics.renderBoard
                                            wild)))
                                   (GHC.Types.[]
                                      @ Graphics.Gloss.Internals.Data.Picture.Picture)) } }) }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

