
==================== FINAL INTERFACE ====================
2016-09-13 02:18:38.96588 UTC

interface main@main:Main 7103
  interface hash: 015f99cc9dd615aaf83a86b0d68e065d
  ABI hash: 095457bab5d60896753ea63fb4c54e91
  export-list hash: 71a242655859f87dd993c3ab9c6aae94
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c7332a14f3733a790310eab9f9e74539
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.b
  Main.concB
  Main.concB'
  Main.main
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 pegboard-0.1.0.0@pegbo_FGCQSHOeNg054bfGSPqnnE
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  pegboard-0.1.0.0@pegbo_FGCQSHOeNg054bfGSPqnnE:Lib d6babe14c79479c1f328bbcde0293fe2
import  -/  pegboard-0.1.0.0@pegbo_FGCQSHOeNg054bfGSPqnnE:PegBoard 16a00028148d987bcb0445bcccc4bd0d
import  -/  pegboard-0.1.0.0@pegbo_FGCQSHOeNg054bfGSPqnnE:PegBoardCriticalPoints 92e1d8b968d8882edd9d80e8b22ace7e
import  -/  pegboard-0.1.0.0@pegbo_FGCQSHOeNg054bfGSPqnnE:PegBoardSymmetries 89f03348b0122ba4de666a164a005ba5
99fa716c5a3c72b93477d0c254a90b09
  b :: PegBoard.Board
  {- Unfolding: (case PegBoard.$wmakeBoard
                        Main.b7 of ww { (#,#) ww1 ww2 ->
                 case PegBoard.$wremovePeg Main.b6 ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 case PegBoard.$wremovePeg Main.b4 ww4 ww5 of ww7 { (#,#) ww8 ww9 ->
                 case PegBoard.$wremovePeg
                        Main.b1
                        ww8
                        ww9 of ww10 { (#,#) ww11 ww12 ->
                 PegBoard.Board ww11 ww12 } } } }) -}
999a9119ed02f0e8919faaf4ffb64e41
  b1 :: PegBoard.Coord
  {- HasNoCafRefs, Unfolding: (PegBoard.Coord Main.b3 Main.b2) -}
eb797de8cae2cedc124b1d52463c88e5
  b2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2) -}
bc297fc032abd1b1a83d385bcaa38990
  b3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3) -}
7ab133627f905abeae98c96b76c919e5
  b4 :: PegBoard.Coord
  {- HasNoCafRefs, Unfolding: (PegBoard.Coord Main.b5 Main.b2) -}
1d40b4ade94955d4d21340bdca3ebd17
  b5 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4) -}
ddc6d35a5e6136c3bb28573db3aaaf6d
  b6 :: PegBoard.Coord
  {- HasNoCafRefs, Unfolding: (PegBoard.Coord Main.b5 Main.b3) -}
ff03ead9230c4abb2891b90b8b713481
  b7 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5) -}
25e90a2bb372fb3efafa3775bacc5fd6
  concB :: [PegBoard.Board]
  {- Unfolding: (case Main.b of ww3 { PegBoard.Board ww4 ww5 ->
                 case PegBoardCriticalPoints.$wconcentricTriangles'
                        ww4
                        ww5
                        (GHC.Types.[] @ PegBoard.Board) of ww6 { (#,#) ww7 ww8 ->
                 ww8 } }) -}
1c4c6da4c343e834d692e76b82e0cad1
  concB' :: [PegBoard.Board]
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 PegBoardCriticalPoints.$wconcentricTrianglesExclusive ww1 ww2 }) -}
3ea7201fc38cb5c5d7f1c1b596331b44
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
93e4cf2df3626cf710ada02d21d0bba5
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main16
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main15
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main14
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main13
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main12
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main11
                        GHC.Types.True
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main10
                        GHC.Types.True
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main9
                        GHC.Types.True
                        ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main8
                        GHC.Types.True
                        ipv14 of ds9 { (#,#) ipv16 ipv17 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main7
                        GHC.Types.True
                        ipv16 of ds10 { (#,#) ipv18 ipv19 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main6
                        GHC.Types.True
                        ipv18 of ds11 { (#,#) ipv20 ipv21 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main5
                        GHC.Types.True
                        ipv20 of ds12 { (#,#) ipv22 ipv23 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        ipv22 of ds13 { (#,#) ipv24 ipv25 ->
                 Main.main3 Main.main2 ipv24 } } } } } } } } } } } } }) -}
66a4d73248971eb6ab3846b53e2235d1
  main10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Zed Flip"#) -}
d9357aa03caa5f3f30e1d74f0c2d371c
  main11 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 case PegBoardSymmetries.$wclockRotate
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 case PegBoardSymmetries.$wclockRotate
                        ww4
                        ww5 of ww7 { (#,#) ww8 ww9 ->
                 PegBoard.$wshowBoard ww8 ww9 } } }) -}
f9e82986b41fd3829892df986183f274
  main12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Counter-clockwise Rotation"#) -}
b295c5ed56b3f13a1fe7f6c4d06c7f20
  main13 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 case PegBoardSymmetries.$wclockRotate
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.$wshowBoard ww4 ww5 } }) -}
2337c1ee39cc80a1eb4a987a6685ea4e
  main14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Clockwise Rotation"#) -}
11a48d83132315a1eb5640d161e6470f
  main15 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 PegBoard.$wshowBoard ww1 ww2 }) -}
7b3c3e5f659766c5a10a2e862f630327
  main16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Base Board"#) -}
5c2c27f530257c01824e1305b0e27bf2
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
d17cefcf4577d705cacae43300086e99
  main2 :: [PegBoardSymmetries.Symmetries]
  {- Unfolding: (case PegBoardSymmetries.$wfindSymmetries
                        Main.b of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ PegBoardSymmetries.Symmetries ww1 ww2 }) -}
765b186ea098d3870e0f79b3b7e57e97
  main3 ::
    [PegBoardSymmetries.Symmetries]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
f2068f40d55929ecad2a2b16fce82fbc
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Symmetries"#) -}
95113d2215761daebd7d2df2fb158688
  main5 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 case PegBoardSymmetries.$wclockRotate
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 case PegBoardSymmetries.$wclockRotate
                        ww4
                        ww5 of ww7 { (#,#) ww8 ww9 ->
                 case PegBoardSymmetries.$wzedFlip
                        ww8
                        ww9 of ww10 { (#,#) ww11 ww12 ->
                 case PegBoardSymmetries.$wclockRotate
                        ww11
                        ww12 of ww13 { (#,#) ww14 ww15 ->
                 PegBoard.$wshowBoard ww14 ww15 } } } } }) -}
6ccb5af689e10bb89d4ec2d4438b22df
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Neg Flip"#) -}
df797e8e7e9226923fda0db592ad48c8
  main7 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 case PegBoardSymmetries.$wclockRotate
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 case PegBoardSymmetries.$wzedFlip ww4 ww5 of ww7 { (#,#) ww8 ww9 ->
                 case PegBoardSymmetries.$wclockRotate
                        ww8
                        ww9 of ww10 { (#,#) ww11 ww12 ->
                 case PegBoardSymmetries.$wclockRotate
                        ww11
                        ww12 of ww13 { (#,#) ww14 ww15 ->
                 PegBoard.$wshowBoard ww14 ww15 } } } } }) -}
c701e3b1c8d8c397b998b153e6fe41db
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\n\
                   \Pos Flip"#) -}
8f64b90c44bf61649b0f2caeb296b97a
  main9 :: GHC.Base.String
  {- Unfolding: (case Main.b of ww { PegBoard.Board ww1 ww2 ->
                 case PegBoardSymmetries.$wzedFlip ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 PegBoard.$wshowBoard ww4 ww5 } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

